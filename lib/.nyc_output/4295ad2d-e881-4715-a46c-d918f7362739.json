{"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\ArrayUtils.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\ArrayUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":8,"column":22},"end":{"line":8,"column":24}},"5":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":22}},"7":{"start":{"line":10,"column":12},"end":{"line":10,"column":34}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":21}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":35}},"10":{"start":{"line":15,"column":32},"end":{"line":15,"column":33}},"11":{"start":{"line":18,"column":8},"end":{"line":30,"column":11}},"12":{"start":{"line":19,"column":23},"end":{"line":19,"column":29}},"13":{"start":{"line":20,"column":23},"end":{"line":20,"column":29}},"14":{"start":{"line":21,"column":12},"end":{"line":29,"column":13}},"15":{"start":{"line":22,"column":16},"end":{"line":22,"column":25}},"16":{"start":{"line":24,"column":17},"end":{"line":29,"column":13}},"17":{"start":{"line":25,"column":16},"end":{"line":25,"column":26}},"18":{"start":{"line":28,"column":16},"end":{"line":28,"column":25}},"19":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"20":{"start":{"line":34,"column":12},"end":{"line":34,"column":25}},"21":{"start":{"line":36,"column":8},"end":{"line":39,"column":9}},"22":{"start":{"line":36,"column":21},"end":{"line":36,"column":22}},"23":{"start":{"line":37,"column":12},"end":{"line":38,"column":29}},"24":{"start":{"line":38,"column":16},"end":{"line":38,"column":29}},"25":{"start":{"line":40,"column":8},"end":{"line":40,"column":20}},"26":{"start":{"line":43,"column":8},"end":{"line":44,"column":25}},"27":{"start":{"line":44,"column":12},"end":{"line":44,"column":25}},"28":{"start":{"line":45,"column":8},"end":{"line":45,"column":71}},"29":{"start":{"line":52,"column":22},"end":{"line":52,"column":24}},"30":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"31":{"start":{"line":53,"column":21},"end":{"line":53,"column":22}},"32":{"start":{"line":54,"column":12},"end":{"line":54,"column":26}},"33":{"start":{"line":56,"column":8},"end":{"line":56,"column":21}},"34":{"start":{"line":62,"column":8},"end":{"line":62,"column":21}},"35":{"start":{"line":69,"column":8},"end":{"line":69,"column":125}},"36":{"start":{"line":70,"column":28},"end":{"line":70,"column":68}},"37":{"start":{"line":71,"column":8},"end":{"line":71,"column":34}},"38":{"start":{"line":78,"column":23},"end":{"line":78,"column":25}},"39":{"start":{"line":79,"column":29},"end":{"line":79,"column":38}},"40":{"start":{"line":80,"column":8},"end":{"line":89,"column":9}},"41":{"start":{"line":81,"column":39},"end":{"line":81,"column":54}},"42":{"start":{"line":82,"column":12},"end":{"line":88,"column":13}},"43":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"44":{"start":{"line":84,"column":20},"end":{"line":84,"column":34}},"45":{"start":{"line":86,"column":16},"end":{"line":86,"column":52}},"46":{"start":{"line":87,"column":16},"end":{"line":87,"column":39}},"47":{"start":{"line":90,"column":8},"end":{"line":90,"column":24}},"48":{"start":{"line":96,"column":20},"end":{"line":96,"column":21}},"49":{"start":{"line":97,"column":8},"end":{"line":101,"column":9}},"50":{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},"51":{"start":{"line":99,"column":16},"end":{"line":99,"column":24}},"52":{"start":{"line":102,"column":8},"end":{"line":102,"column":21}},"53":{"start":{"line":108,"column":8},"end":{"line":108,"column":156}},"54":{"start":{"line":109,"column":29},"end":{"line":109,"column":71}},"55":{"start":{"line":110,"column":8},"end":{"line":114,"column":9}},"56":{"start":{"line":110,"column":21},"end":{"line":110,"column":22}},"57":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"58":{"start":{"line":112,"column":16},"end":{"line":112,"column":49}},"59":{"start":{"line":115,"column":8},"end":{"line":115,"column":21}},"60":{"start":{"line":121,"column":8},"end":{"line":121,"column":57}},"61":{"start":{"line":127,"column":8},"end":{"line":132,"column":9}},"62":{"start":{"line":128,"column":12},"end":{"line":128,"column":24}},"63":{"start":{"line":131,"column":12},"end":{"line":131,"column":25}},"64":{"start":{"line":138,"column":8},"end":{"line":143,"column":9}},"65":{"start":{"line":139,"column":12},"end":{"line":139,"column":24}},"66":{"start":{"line":142,"column":12},"end":{"line":142,"column":25}},"67":{"start":{"line":146,"column":0},"end":{"line":146,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":36},"end":{"line":13,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":23},"end":{"line":16,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":25},"end":{"line":15,"column":26}},"loc":{"start":{"line":15,"column":32},"end":{"line":15,"column":33}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":39},"end":{"line":31,"column":5}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":19},"end":{"line":18,"column":20}},"loc":{"start":{"line":18,"column":31},"end":{"line":30,"column":9}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":26},"end":{"line":41,"column":5}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":34},"end":{"line":46,"column":5}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":20},"end":{"line":57,"column":5}},"line":51},"8":{"name":"(anonymous_8)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":30},"end":{"line":63,"column":5}},"line":61},"9":{"name":"(anonymous_9)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":35},"end":{"line":72,"column":5}},"line":68},"10":{"name":"(anonymous_10)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":37},"end":{"line":91,"column":5}},"line":77},"11":{"name":"(anonymous_11)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":31},"end":{"line":103,"column":5}},"line":95},"12":{"name":"(anonymous_12)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":42},"end":{"line":116,"column":5}},"line":107},"13":{"name":"(anonymous_13)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":45},"end":{"line":122,"column":5}},"line":120},"14":{"name":"(anonymous_14)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":28},"end":{"line":133,"column":5}},"line":126},"15":{"name":"(anonymous_15)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":28},"end":{"line":144,"column":5}},"line":137}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":29,"column":13}},{"start":{"line":21,"column":12},"end":{"line":29,"column":13}}],"line":21},"1":{"loc":{"start":{"line":24,"column":17},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":17},"end":{"line":29,"column":13}},{"start":{"line":24,"column":17},"end":{"line":29,"column":13}}],"line":24},"2":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{"line":33,"column":8},"end":{"line":35,"column":9}}],"line":33},"3":{"loc":{"start":{"line":37,"column":12},"end":{"line":38,"column":29}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":38,"column":29}},{"start":{"line":37,"column":12},"end":{"line":38,"column":29}}],"line":37},"4":{"loc":{"start":{"line":43,"column":8},"end":{"line":44,"column":25}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":44,"column":25}},{"start":{"line":43,"column":8},"end":{"line":44,"column":25}}],"line":43},"5":{"loc":{"start":{"line":82,"column":12},"end":{"line":88,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":88,"column":13}},{"start":{"line":82,"column":12},"end":{"line":88,"column":13}}],"line":82},"6":{"loc":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"type":"if","locations":[{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},{"start":{"line":83,"column":16},"end":{"line":85,"column":17}}],"line":83},"7":{"loc":{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},{"start":{"line":98,"column":12},"end":{"line":100,"column":13}}],"line":98},"8":{"loc":{"start":{"line":108,"column":29},"end":{"line":108,"column":71}},"type":"binary-expr","locations":[{"start":{"line":108,"column":29},"end":{"line":108,"column":48}},{"start":{"line":108,"column":52},"end":{"line":108,"column":71}}],"line":108},"9":{"loc":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},{"start":{"line":111,"column":12},"end":{"line":113,"column":13}}],"line":111},"10":{"loc":{"start":{"line":127,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":132,"column":9}},{"start":{"line":127,"column":8},"end":{"line":132,"column":9}}],"line":127},"11":{"loc":{"start":{"line":138,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":143,"column":9}},{"start":{"line":138,"column":8},"end":{"line":143,"column":9}}],"line":138}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":2,"7":8,"8":2,"9":1,"10":4,"11":1,"12":6,"13":6,"14":6,"15":1,"16":5,"17":4,"18":1,"19":5,"20":1,"21":4,"22":4,"23":11,"24":2,"25":2,"26":3,"27":1,"28":2,"29":2,"30":2,"31":2,"32":10,"33":2,"34":3,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":5,"42":5,"43":3,"44":2,"45":3,"46":3,"47":1,"48":1,"49":1,"50":5,"51":2,"52":1,"53":18,"54":16,"55":16,"56":16,"57":20,"58":12,"59":4,"60":9,"61":2,"62":1,"63":1,"64":2,"65":1,"66":1,"67":1},"f":{"0":2,"1":1,"2":4,"3":1,"4":6,"5":5,"6":3,"7":2,"8":3,"9":1,"10":1,"11":1,"12":18,"13":9,"14":2,"15":2},"b":{"0":[1,5],"1":[4,1],"2":[1,4],"3":[2,9],"4":[1,2],"5":[3,2],"6":[2,1],"7":[2,3],"8":[18,17],"9":[12,8],"10":[1,1],"11":[1,1]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/ArrayUtils.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/ArrayUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Comparable, comparableEquals } from './Comparable';\nimport { Utils } from './Utils';\n\nexport class ArrayUtils {\n\n    public static create<T>(width: number, initValue: T): T[] {\n        const array: Array<T> = [];\n        for (let x: number = 0; x < width; x++) {\n            array.push(initValue);\n        }\n        return array;\n    }\n\n    public static copy<T>(array: ReadonlyArray<T>): T[] {\n        return array.map((t: T): T => t);\n    }\n\n    public static sortByDescending<T>(array: T[], by: (t: T) => number): void {\n        array.sort((t1: T, t2: T): number => {\n            const v1: number = by(t1);\n            const v2: number = by(t2);\n            if (v1 < v2) {\n                return 1; // sort from higher to lower\n            } else if (v1 > v2) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n    }\n\n    public static equals<T extends Comparable>(t1: ReadonlyArray<T>, t2: ReadonlyArray<T>): boolean {\n        if (t1.length !== t2.length) {\n            return false;\n        }\n        for (let i: number = 0; i < t1.length; i++) {\n            if (comparableEquals(t1[i], t2[i]) === false) return false;\n        }\n        return true;\n    }\n\n\n    public static isPrefix<T extends Comparable>(prefix: ReadonlyArray<T>, list: ReadonlyArray<T>): boolean {\n        if (prefix.length > list.length) return false;\n        return ArrayUtils.equals(prefix, list.slice(0, prefix.length));\n    }\n\n    /**\n     * range(n) returns the list [0, 1, 2, ..., n-1]\n     * Enables doing *ngFor=\"let x in ArrayUtils.range(5)\" in an Angular template\n     */\n    public static range(n: number): number[] {\n        const range: number[] = [];\n        for (let i: number = 0; i < n; i++) {\n            range.push(i);\n        }\n        return range;\n    }\n\n    /**\n     * A method that can be used to sort an array with the smallest number first with xs.sort(ArrayUtils.smallerFirst);\n     */\n    public static smallerFirst(a: number, b: number): number {\n        return a-b;\n    }\n\n    /**\n     * Gets a random element from an array.\n     * Throws if the array is empty.\n     */\n    public static getRandomElement<T>(array: T[]): T {\n        Utils.assert(array.length > 0, 'ArrayUtils.getRandomElement must be called on an array containing elements');\n        const randomIndex: number = Math.floor(Math.random() * array.length);\n        return array[randomIndex];\n    }\n\n    /**\n     * Gets the maximum elements of an array, according to a given metric.\n     * Returns an array containing all the maximal values\n     */\n    public static maximumsBy<T>(array: T[], metric: (value: T) => number): T[] {\n        let maximums: T[] = [];\n        let maxMetricValue: number = -Infinity;\n        for (const element of array) {\n            const currentMetricValue: number = metric(element);\n            if (currentMetricValue >= maxMetricValue) {\n                if (currentMetricValue > maxMetricValue) {\n                    maximums = [];\n                }\n                maxMetricValue = currentMetricValue;\n                maximums.push(element);\n            }\n        }\n        return maximums;\n    }\n\n    /**\n     * Counts the number of element in an array that have the provided value\n     */\n    public static count<T>(array: T[], value: T): number {\n        let total: number = 0;\n        for (const element of array) {\n            if (comparableEquals(element, value)) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    /**\n     * Check whether the first argument is strictly smaller than the second, element-wise\n     */\n    public static isLessThan(inferior: ReadonlyArray<number>, superior: ReadonlyArray<number>): boolean {\n        Utils.assert(inferior.length > 0 && superior.length > 0, 'ArrayUtils.isLessThan/isGreaterThan should have two non-empty list as parameter');\n        const maximumIndex: number = Math.min(inferior.length, superior.length);\n        for (let i: number = 0; i < maximumIndex; i++) {\n            if (superior[i] !== inferior[i]) { // We found an inequality\n                return inferior[i] < superior[i];\n            }\n        }\n        return false; // They are equal\n    }\n\n    /**\n     * Check whether the first argument is strictly greater than the second, element-wise.\n     */\n    public static isGreaterThan(superior: ReadonlyArray<number>, inferior: ReadonlyArray<number>): boolean {\n        return ArrayUtils.isLessThan(inferior, superior);\n    }\n\n    /**\n     * Return the minimal array (comparing element-wise) between two arrays.\n     */\n    public static min(left: ReadonlyArray<number>, right: ReadonlyArray<number>): ReadonlyArray<number> {\n        if (ArrayUtils.isLessThan(left, right)) {\n            return left;\n        } else {\n            return right;\n        }\n    }\n\n    /**\n     * Return the maximal array (comparing element-wise) between two arrays.\n     */\n    public static max(left: ReadonlyArray<number>, right: ReadonlyArray<number>): ReadonlyArray<number> {\n        if (ArrayUtils.isGreaterThan(left, right)) {\n            return left;\n        } else {\n            return right;\n        }\n    }\n\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"15a134b25578a277fa94db943c55589c4c350374","contentHash":"72355338b91188c61e3ce0ede6c28a1902b8d359f026cc447bfa43fe703bd4b0"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Comparable.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Comparable.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":118}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":6,"column":4},"end":{"line":30,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":26,"column":9}},"5":{"start":{"line":8,"column":36},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":36},"end":{"line":9,"column":37}},"7":{"start":{"line":10,"column":12},"end":{"line":10,"column":59}},"8":{"start":{"line":13,"column":26},"end":{"line":13,"column":27}},"9":{"start":{"line":14,"column":26},"end":{"line":14,"column":27}},"10":{"start":{"line":15,"column":12},"end":{"line":24,"column":13}},"11":{"start":{"line":16,"column":16},"end":{"line":23,"column":17}},"12":{"start":{"line":17,"column":20},"end":{"line":19,"column":21}},"13":{"start":{"line":18,"column":24},"end":{"line":18,"column":37}},"14":{"start":{"line":22,"column":20},"end":{"line":22,"column":33}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":24}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":23}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":81}},"18":{"start":{"line":36,"column":0},"end":{"line":36,"column":48}},"19":{"start":{"line":39,"column":4},"end":{"line":50,"column":5}},"20":{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},"21":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"22":{"start":{"line":42,"column":16},"end":{"line":42,"column":29}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":81}},"24":{"start":{"line":49,"column":8},"end":{"line":49,"column":21}},"25":{"start":{"line":52,"column":0},"end":{"line":52,"column":44}},"26":{"start":{"line":54,"column":4},"end":{"line":54,"column":119}},"27":{"start":{"line":56,"column":0},"end":{"line":56,"column":46}},"28":{"start":{"line":58,"column":4},"end":{"line":64,"column":5}},"29":{"start":{"line":59,"column":8},"end":{"line":59,"column":44}},"30":{"start":{"line":63,"column":8},"end":{"line":63,"column":109}},"31":{"start":{"line":66,"column":0},"end":{"line":66,"column":44}}},"fnMap":{"0":{"name":"comparableEqualsStrict","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":31}},"loc":{"start":{"line":5,"column":38},"end":{"line":31,"column":1}},"line":5},"1":{"name":"isComparableObject","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":27}},"loc":{"start":{"line":32,"column":35},"end":{"line":35,"column":1}},"line":32},"2":{"name":"isComparableJSON","decl":{"start":{"line":38,"column":9},"end":{"line":38,"column":25}},"loc":{"start":{"line":38,"column":33},"end":{"line":51,"column":1}},"line":38},"3":{"name":"isComparableValue","decl":{"start":{"line":53,"column":9},"end":{"line":53,"column":26}},"loc":{"start":{"line":53,"column":34},"end":{"line":55,"column":1}},"line":53},"4":{"name":"comparableEquals","decl":{"start":{"line":57,"column":9},"end":{"line":57,"column":25}},"loc":{"start":{"line":57,"column":32},"end":{"line":65,"column":1}},"line":57}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":30,"column":5}},{"start":{"line":6,"column":4},"end":{"line":30,"column":5}}],"line":6},"1":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":55}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":17}},{"start":{"line":6,"column":21},"end":{"line":6,"column":30}},{"start":{"line":6,"column":34},"end":{"line":6,"column":55}}],"line":6},"2":{"loc":{"start":{"line":7,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":26,"column":9}},{"start":{"line":7,"column":8},"end":{"line":26,"column":9}}],"line":7},"3":{"loc":{"start":{"line":16,"column":16},"end":{"line":23,"column":17}},"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":23,"column":17}},{"start":{"line":16,"column":16},"end":{"line":23,"column":17}}],"line":16},"4":{"loc":{"start":{"line":17,"column":20},"end":{"line":19,"column":21}},"type":"if","locations":[{"start":{"line":17,"column":20},"end":{"line":19,"column":21}},{"start":{"line":17,"column":20},"end":{"line":19,"column":21}}],"line":17},"5":{"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":80}},"type":"binary-expr","locations":[{"start":{"line":34,"column":11},"end":{"line":34,"column":36}},{"start":{"line":34,"column":40},"end":{"line":34,"column":53}},{"start":{"line":34,"column":57},"end":{"line":34,"column":80}}],"line":34},"6":{"loc":{"start":{"line":39,"column":4},"end":{"line":50,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":50,"column":5}},{"start":{"line":39,"column":4},"end":{"line":50,"column":5}}],"line":39},"7":{"loc":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},{"start":{"line":41,"column":12},"end":{"line":43,"column":13}}],"line":41},"8":{"loc":{"start":{"line":41,"column":16},"end":{"line":41,"column":77}},"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":34}},{"start":{"line":41,"column":38},"end":{"line":41,"column":77}}],"line":41},"9":{"loc":{"start":{"line":46,"column":15},"end":{"line":46,"column":80}},"type":"binary-expr","locations":[{"start":{"line":46,"column":15},"end":{"line":46,"column":28}},{"start":{"line":46,"column":32},"end":{"line":46,"column":80}}],"line":46},"10":{"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":118}},"type":"binary-expr","locations":[{"start":{"line":54,"column":11},"end":{"line":54,"column":24}},{"start":{"line":54,"column":28},"end":{"line":54,"column":53}},{"start":{"line":54,"column":57},"end":{"line":54,"column":91}},{"start":{"line":54,"column":95},"end":{"line":54,"column":118}}],"line":54},"11":{"loc":{"start":{"line":58,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":64,"column":5}},{"start":{"line":58,"column":4},"end":{"line":64,"column":5}}],"line":58},"12":{"loc":{"start":{"line":58,"column":8},"end":{"line":58,"column":52}},"type":"binary-expr","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":28}},{"start":{"line":58,"column":32},"end":{"line":58,"column":52}}],"line":58}},"s":{"0":1,"1":1,"2":1,"3":234,"4":20,"5":17,"6":17,"7":17,"8":3,"9":3,"10":3,"11":4,"12":3,"13":1,"14":1,"15":1,"16":214,"17":494,"18":1,"19":22,"20":21,"21":25,"22":4,"23":17,"24":1,"25":1,"26":494,"27":1,"28":232,"29":231,"30":1,"31":1},"f":{"0":234,"1":494,"2":22,"3":494,"4":232},"b":{"0":[20,214],"1":[234,234,233],"2":[17,3],"3":[3,1],"4":[1,2],"5":[494,53,53],"6":[21,1],"7":[4,21],"8":[25,25],"9":[17,16],"10":[494,492,457,16],"11":[231,1],"12":[232,231]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/Comparable.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/Comparable.ts"],"names":[],"mappings":";;;AAAA,iCAAwD;AAexD,SAAS,sBAAsB,CAAuB,CAAI,EAAE,CAAI;IAC5D,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC;QAClD,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,EAAE,CAAC;YACnB,MAAM,eAAe,GAAqB,CAAqB,CAAC;YAChE,MAAM,eAAe,GAAqB,CAAqB,CAAC;YAChE,OAAO,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnD,CAAC;aAAM,CAAC;YACJ,MAAM,KAAK,GAAmB,CAAmB,CAAC;YAClD,MAAM,KAAK,GAAmB,CAAmB,CAAC;YAClD,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;gBACnC,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;oBACf,IAAI,sBAAsB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;wBAC3D,OAAO,KAAK,CAAC;oBACjB,CAAC;gBACL,CAAC;qBAAM,CAAC;oBACJ,OAAO,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;YACD,OAAO,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;SAAM,CAAC;QACJ,OAAO,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC;AACL,CAAC;AAED,SAAgB,kBAAkB,CAAC,KAAc;IAC7C,wCAAwC;IACxC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;AACjF,CAAC;AAHD,gDAGC;AAED,iHAAiH;AACjH,SAAgB,gBAAgB,CAAC,KAAU;IACvC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC5B,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;YACtB,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;gBAChE,OAAO,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QACD,mDAAmD;QACnD,OAAO,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,WAAW,CAAC,SAAS,KAAK,MAAM,CAAC,SAAS,CAAC;IAC7E,CAAC;SAAM,CAAC;QACJ,OAAO,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;AAZD,4CAYC;AAED,SAAgB,iBAAiB,CAAC,KAAc;IAC5C,OAAO,KAAK,IAAI,IAAI,IAAI,kBAAkB,CAAC,KAAK,CAAC,IAAI,IAAA,sBAAe,EAAC,KAAK,CAAC,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC3G,CAAC;AAFD,8CAEC;AAED,SAAgB,gBAAgB,CAAI,CAAI,EAAE,CAAI;IAC1C,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/C,OAAO,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;SAAM,CAAC;QACJ,wDAAwD;QACxD,MAAM,IAAI,KAAK,CAAC,qCAAsC,CAAY,CAAC,WAAW,CAAC,IAAI,QAAS,CAAY,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;IACjI,CAAC;AACL,CAAC;AAPD,4CAOC","sourcesContent":["import { isJSONPrimitive, JSONPrimitive } from './JSON';\n\nexport interface ComparableObject {\n\n    equals(other: this): boolean;\n}\nexport type ComparableValue = JSONPrimitive | ComparableObject | ComparableJSON;\n\nexport type ComparableJSON = {\n    [key: string]: ComparableValue,\n    [key: number]: ComparableValue,\n};\n\nexport type Comparable = JSONPrimitive | ComparableObject | ComparableJSON;\n\nfunction comparableEqualsStrict<T extends Comparable>(a: T, b: T): boolean {\n    if (a != null && b != null && typeof a === 'object') {\n        if (a.equals != null) {\n            const comparableValue: ComparableObject = a as ComparableObject;\n            const otherComparable: ComparableObject = b as ComparableObject;\n            return comparableValue.equals(otherComparable);\n        } else {\n            const aJSON: ComparableJSON = a as ComparableJSON;\n            const bJSON: ComparableJSON = b as ComparableJSON;\n            for (const key of Object.keys(aJSON)) {\n                if (key in bJSON) {\n                    if (comparableEqualsStrict(aJSON[key], bJSON[key]) === false) {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            }\n            return true;\n        }\n    } else {\n        return a === b;\n    }\n}\n\nexport function isComparableObject(value: unknown): value is ComparableObject {\n    // eslint-disable-next-line dot-notation\n    return typeof value === 'object' && value != null && value['equals'] != null;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function isComparableJSON(value: any): value is ComparableJSON {\n    if (typeof value === 'object') {\n        for (const key in value) {\n            if (value[key] != null && isComparableValue(value[key]) === false) {\n                return false;\n            }\n        }\n        // A JSON value should directly inherit from Object\n        return value != null && value.constructor.prototype === Object.prototype;\n    } else {\n        return false;\n    }\n}\n\nexport function isComparableValue(value: unknown): value is ComparableValue {\n    return value == null || isComparableObject(value) || isJSONPrimitive(value) || isComparableJSON(value);\n}\n\nexport function comparableEquals<T>(a: T, b: T): boolean {\n    if (isComparableValue(a) && isComparableValue(b)) {\n        return comparableEqualsStrict(a, b);\n    } else {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        throw new Error(`Comparing non comparable objects: ${(a as Object).constructor.name} and ${(b as Object).constructor.name}`);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b96487f2de7b36dae6800ef95964014262a4159d","contentHash":"031114deea866411bf18b13857c89c8f7448d7dd4bb8bda8b1c544b37e4fd27f"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\JSON.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\JSON.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":4},"end":{"line":6,"column":20}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":20}},"4":{"start":{"line":7,"column":4},"end":{"line":8,"column":20}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":20}},"6":{"start":{"line":9,"column":4},"end":{"line":10,"column":20}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":20}},"8":{"start":{"line":11,"column":4},"end":{"line":12,"column":20}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":20}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":17}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}}},"fnMap":{"0":{"name":"isJSONPrimitive","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":24}},"loc":{"start":{"line":4,"column":32},"end":{"line":14,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":6,"column":20}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":6,"column":20}},{"start":{"line":5,"column":4},"end":{"line":6,"column":20}}],"line":5},"1":{"loc":{"start":{"line":7,"column":4},"end":{"line":8,"column":20}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":8,"column":20}},{"start":{"line":7,"column":4},"end":{"line":8,"column":20}}],"line":7},"2":{"loc":{"start":{"line":9,"column":4},"end":{"line":10,"column":20}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":10,"column":20}},{"start":{"line":9,"column":4},"end":{"line":10,"column":20}}],"line":9},"3":{"loc":{"start":{"line":11,"column":4},"end":{"line":12,"column":20}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":12,"column":20}},{"start":{"line":11,"column":4},"end":{"line":12,"column":20}}],"line":11}},"s":{"0":1,"1":1,"2":464,"3":202,"4":262,"5":236,"6":26,"7":6,"8":20,"9":1,"10":19,"11":1},"f":{"0":464},"b":{"0":[202,262],"1":[236,26],"2":[6,20],"3":[1,19]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/JSON.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/JSON.ts"],"names":[],"mappings":";;;AAWA,SAAgB,eAAe,CAAC,KAAc;IAC1C,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,OAAO,IAAI,CAAC;IAC3C,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,OAAO,IAAI,CAAC;IAC3C,IAAI,OAAO,KAAK,KAAK,SAAS;QAAE,OAAO,IAAI,CAAC;IAC5C,IAAI,KAAK,KAAK,IAAI;QAAE,OAAO,IAAI,CAAC;IAChC,OAAO,KAAK,CAAC;AACjB,CAAC;AAND,0CAMC","sourcesContent":["import { FieldValue } from 'firebase/firestore';\n\n// These are the datatypes supported by firestore. Arrays of arrays are not\n// supported, but arrays containing objects containing arrays are, which is what\n// is encoded in these types.\n\nexport type JSONPrimitive = string | number | boolean | null | undefined;\nexport type JSONValue = JSONPrimitive | JSONObject | Array<JSONValueWithoutArray>;\nexport type JSONValueWithoutArray = JSONPrimitive | JSONObject;\nexport type JSONObject = { [member: string]: JSONValue };\n\nexport function isJSONPrimitive(value: unknown): value is JSONPrimitive {\n    if (typeof value === 'string') return true;\n    if (typeof value === 'number') return true;\n    if (typeof value === 'boolean') return true;\n    if (value === null) return true;\n    return false;\n}\n\nexport type FirestoreJSONPrimitive = JSONPrimitive | FieldValue;\nexport type FirestoreJSONValue =\n    FirestoreJSONPrimitive |\n    FirestoreJSONObject |\n    Array<FirestoreJSONValueWithoutArray> |\n    ReadonlyArray<FirestoreJSONValueWithoutArray>;\nexport type FirestoreJSONValueWithoutArray = FirestoreJSONPrimitive | FirestoreJSONObject;\nexport type FirestoreJSONObject = { [member: string]: FirestoreJSONValue };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"732af556c7065157f321d67b3fae5e1a9fd58fef","contentHash":"7c57918e9dd6e1657035ffa3fec4d70b4e6727657382bfc6db643c90304e8537"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Utils.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":50}},"3":{"start":{"line":11,"column":22},"end":{"line":13,"column":5}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":62}},"5":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"6":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"7":{"start":{"line":17,"column":16},"end":{"line":17,"column":41}},"8":{"start":{"line":19,"column":12},"end":{"line":19,"column":136}},"9":{"start":{"line":23,"column":8},"end":{"line":27,"column":9}},"10":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"11":{"start":{"line":25,"column":16},"end":{"line":25,"column":23}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":152}},"13":{"start":{"line":32,"column":8},"end":{"line":37,"column":9}},"14":{"start":{"line":33,"column":12},"end":{"line":33,"column":87}},"15":{"start":{"line":36,"column":12},"end":{"line":36,"column":25}},"16":{"start":{"line":40,"column":8},"end":{"line":47,"column":9}},"17":{"start":{"line":45,"column":12},"end":{"line":45,"column":63}},"18":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"19":{"start":{"line":50,"column":8},"end":{"line":50,"column":21}},"20":{"start":{"line":53,"column":0},"end":{"line":53,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":49},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":48},"end":{"line":21,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":53},"end":{"line":30,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":33},"end":{"line":38,"column":5}},"line":31},"4":{"name":"(anonymous_4)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":44},"end":{"line":48,"column":5}},"line":39},"5":{"name":"(anonymous_5)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":27},"end":{"line":51,"column":5}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},{"start":{"line":15,"column":8},"end":{"line":20,"column":9}}],"line":15},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},{"start":{"line":16,"column":12},"end":{"line":18,"column":13}}],"line":16},"2":{"loc":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},{"start":{"line":24,"column":12},"end":{"line":26,"column":13}}],"line":24},"3":{"loc":{"start":{"line":32,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":37,"column":9}},{"start":{"line":32,"column":8},"end":{"line":37,"column":9}}],"line":32},"4":{"loc":{"start":{"line":40,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":47,"column":9}},{"start":{"line":40,"column":8},"end":{"line":47,"column":9}}],"line":40}},"s":{"0":1,"1":1,"2":1,"3":1,"4":5,"5":3,"6":2,"7":1,"8":1,"9":2,"10":4,"11":1,"12":1,"13":13,"14":2,"15":11,"16":119,"17":9,"18":9,"19":18,"20":1},"f":{"0":5,"1":3,"2":2,"3":13,"4":119,"5":18},"b":{"0":[2,1],"1":[1,1],"2":[1,3],"3":[2,11],"4":[9,110]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/Utils.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/Utils.ts"],"names":[],"mappings":";;;AACA,mDAAgD;AAEhD,MAAa,KAAK;IAEd;;;;OAIG;IACI,MAAM,CAAC,QAAQ,GAClB,CAAC,KAAa,EAAE,OAAe,EAAE,KAAiB,EAAE,EAAE;QAClD,OAAO,6BAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC,CAAC;IAEC,MAAM,CAAC,UAAU,CAAI,KAAQ,EAAE,QAAW,EAAE,OAAgB;QAC/D,IAAI,KAAK,KAAK,QAAQ,EAAE,CAAC;YACrB,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;gBACxB,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,qEAAqE,QAAQ,aAAa,KAAK,WAAW,CAAC,CAAC;QAChI,CAAC;IACL,CAAC;IAEM,MAAM,CAAC,kBAAkB,CAAI,KAAQ,EAAE,cAAmB;QAC7D,KAAK,MAAM,QAAQ,IAAI,cAAc,EAAE,CAAC;YACpC,IAAI,KAAK,KAAK,QAAQ,EAAE,CAAC;gBACrB,OAAO;YACX,CAAC;QACL,CAAC;QACD,kBAAkB;QAClB,MAAM,IAAI,KAAK,CAAC,mFAAmF,cAAc,aAAa,KAAK,WAAW,CAAC,CAAC;IACpJ,CAAC;IAEM,MAAM,CAAC,cAAc,CAAI,KAA4B;QACxD,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;QAC/E,CAAC;aAAM,CAAC;YACJ,OAAO,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,SAAkB,EAAE,OAAe,EAAE,IAAgB;QACtE,IAAI,SAAS,KAAK,KAAK,EAAE,CAAC;YACtB,kDAAkD;YAClD,yCAAyC;YACzC,yDAAyD;YACzD,mEAAmE;YACnE,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YACnD,MAAM,IAAI,KAAK,CAAC,sBAAsB,OAAO,EAAE,CAAC,CAAC;QACrD,CAAC;IACL,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAI,KAAQ;QAC9B,OAAO,KAAK,CAAC;IACjB,CAAC;;AApDL,sBAqDC","sourcesContent":["import { JSONValue } from './JSON';\nimport { MGPValidation } from './MGPValidation';\n\nexport class Utils {\n\n    /**\n     * The error logger is called in order to log errors when they arise.\n     * It should be set by the codebase relying on this, for example by doing:\n     * Utils.logError = myErrorLogger;\n     */\n    public static logError: (kind: string, message: string, data?: JSONValue) => MGPValidation =\n        (_kind: string, message: string, _data?: JSONValue) => {\n            return MGPValidation.failure(message);\n        };\n\n    public static expectToBe<T>(value: T, expected: T, message?: string): void {\n        if (value !== expected) {\n            if (message !== undefined) {\n                throw new Error(message);\n            }\n            throw new Error(`A default switch case did not observe the correct value, expected ${expected}, but got ${value} instead.`);\n        }\n    }\n\n    public static expectToBeMultiple<T>(value: T, expectedValues: T[]): void {\n        for (const expected of expectedValues) {\n            if (value === expected) {\n                return;\n            }\n        }\n        // No value found!\n        throw new Error(`A default switch case did not observe the correct value, expected a value among ${expectedValues}, but got ${value} instead.`);\n    }\n\n    public static getNonNullable<T>(value : T | null | undefined): T {\n        if (value == null) {\n            throw new Error(`Expected value not to be null or undefined, but it was.`);\n        } else {\n            return value;\n        }\n    }\n\n    public static assert(condition: boolean, message: string, data?: JSONValue): void {\n        if (condition === false) {\n            // We log the error but we also throw an exception\n            // This is because if an assertion fails,\n            // we don't want to execute the code after the assertion.\n            // Otherwise, this could result in potentially very serious issues.\n            Utils.logError('Assertion failure', message, data);\n            throw new Error(`Assertion failure: ${message}`);\n        }\n    }\n\n    public static identity<T>(thing: T): T {\n        return thing;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ccfc824363f04c5995c7335933bcf7a0a1fc9cb7","contentHash":"0f33b63581dff02319c04f3c4f200e7e8b96451c8dbf69e5a041bc76ecf462ba"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPValidation.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPValidation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":64}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":46}},"3":{"start":{"line":7,"column":0},"end":{"line":22,"column":66}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":73}},"5":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":41}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":63}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":42}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":57}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":36}},"11":{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},"12":{"start":{"line":29,"column":12},"end":{"line":29,"column":73}},"13":{"start":{"line":32,"column":12},"end":{"line":32,"column":52}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":48}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":50}},"16":{"start":{"line":40,"column":0},"end":{"line":40,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":1},"end":{"line":7,"column":2}},"loc":{"start":{"line":7,"column":26},"end":{"line":22,"column":1}},"line":7},"1":{"name":"ofFallible","decl":{"start":{"line":9,"column":13},"end":{"line":9,"column":23}},"loc":{"start":{"line":9,"column":34},"end":{"line":16,"column":5}},"line":9},"2":{"name":"failure","decl":{"start":{"line":18,"column":13},"end":{"line":18,"column":20}},"loc":{"start":{"line":18,"column":29},"end":{"line":20,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":48},"end":{"line":34,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":47},"end":{"line":38,"column":5}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},{"start":{"line":10,"column":8},"end":{"line":15,"column":9}}],"line":10},"1":{"loc":{"start":{"line":22,"column":3},"end":{"line":22,"column":64}},"type":"binary-expr","locations":[{"start":{"line":22,"column":3},"end":{"line":22,"column":16}},{"start":{"line":22,"column":21},"end":{"line":22,"column":63}}],"line":22},"2":{"loc":{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},{"start":{"line":28,"column":8},"end":{"line":33,"column":9}}],"line":28}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":1,"8":1,"9":13,"10":1,"11":2,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":1,"1":2,"2":13,"3":2,"4":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/MGPValidation.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/MGPValidation.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAI5C,2DAA2D;AAC3D,IAAiB,aAAa,CAe7B;AAfD,WAAiB,aAAa;IAEb,qBAAO,GAAkB,yBAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAErE,SAAgB,UAAU,CAAI,QAAwB;QAClD,IAAI,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC;YACvB,OAAO,aAAa,CAAC,OAAO,CAAC;QACjC,CAAC;aAAM,CAAC;YACJ,OAAO,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;QACvD,CAAC;IACL,CAAC;IANe,wBAAU,aAMzB,CAAA;IAED,SAAgB,OAAO,CAAC,MAAc;QAClC,OAAO,yBAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAFe,qBAAO,UAEtB,CAAA;AACL,CAAC,EAfgB,aAAa,6BAAb,aAAa,QAe7B;AAED;;GAEG;AACH,MAAa,sBAAsB;IAExB,MAAM,CAAC,iBAAiB,CAAC,QAAuB,EAAE,OAAgB;QACrE,IAAI,OAAO,IAAI,IAAI,EAAE,CAAC;YAClB,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACjE,CAAC;aAAM,CAAC;YACJ,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC5C,CAAC;IACL,CAAC;IAEM,MAAM,CAAC,iBAAiB,CAAC,QAAuB,EAAE,MAAc;QACnE,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;QACxC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC;CACJ;AAdD,wDAcC","sourcesContent":["import { MGPFallible } from './MGPFallible';\n\nexport type MGPValidation = MGPFallible<void>\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport namespace MGPValidation {\n\n    export const SUCCESS: MGPValidation = MGPFallible.success(undefined);\n\n    export function ofFallible<T>(fallible: MGPFallible<T>): MGPValidation {\n        if (fallible.isSuccess()) {\n            return MGPValidation.SUCCESS;\n        } else {\n            return MGPValidation.failure(fallible.getReason());\n        }\n    }\n\n    export function failure(reason: string): MGPValidation {\n        return MGPFallible.failure(reason);\n    }\n}\n\n/**\n * This is a helper class to test MGPValidation values\n */\nexport class MGPValidationTestUtils {\n\n    public static expectToBeSuccess(fallible: MGPValidation, context?: string): void {\n        if (context != null) {\n            expect(fallible.isSuccess()).withContext(context).toBeTrue();\n        } else {\n            expect(fallible.isSuccess()).toBeTrue();\n        }\n    }\n\n    public static expectToBeFailure(fallible: MGPValidation, reason: string): void {\n        expect(fallible.isFailure()).toBeTrue();\n        expect(fallible.getReason()).toBe(reason);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"93aa9087ad99014271cf9adc44b94cd824c13c31","contentHash":"c6c8ab55cf5c8b4e607aa382591dd7141462f57e2cf6af8044055a14bcb53096"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPFallible.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPFallible.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":46}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":45}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":46}},"6":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":79}},"8":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"9":{"start":{"line":19,"column":12},"end":{"line":19,"column":25}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":75}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":16}},"13":{"start":{"line":30,"column":8},"end":{"line":30,"column":27}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":20}},"15":{"start":{"line":36,"column":8},"end":{"line":36,"column":21}},"16":{"start":{"line":39,"column":8},"end":{"line":39,"column":26}},"17":{"start":{"line":42,"column":8},"end":{"line":42,"column":68}},"18":{"start":{"line":45,"column":8},"end":{"line":45,"column":21}},"19":{"start":{"line":48,"column":8},"end":{"line":48,"column":56}},"20":{"start":{"line":51,"column":8},"end":{"line":51,"column":52}},"21":{"start":{"line":58,"column":8},"end":{"line":58,"column":16}},"22":{"start":{"line":59,"column":8},"end":{"line":59,"column":29}},"23":{"start":{"line":62,"column":8},"end":{"line":62,"column":21}},"24":{"start":{"line":65,"column":8},"end":{"line":65,"column":20}},"25":{"start":{"line":68,"column":8},"end":{"line":68,"column":99}},"26":{"start":{"line":71,"column":8},"end":{"line":71,"column":27}},"27":{"start":{"line":74,"column":8},"end":{"line":74,"column":32}},"28":{"start":{"line":77,"column":8},"end":{"line":77,"column":49}},"29":{"start":{"line":80,"column":8},"end":{"line":80,"column":53}},"30":{"start":{"line":83,"column":8},"end":{"line":83,"column":48}},"31":{"start":{"line":88,"column":8},"end":{"line":88,"column":48}},"32":{"start":{"line":89,"column":8},"end":{"line":89,"column":43}},"33":{"start":{"line":92,"column":8},"end":{"line":92,"column":48}},"34":{"start":{"line":93,"column":8},"end":{"line":93,"column":50}},"35":{"start":{"line":96,"column":0},"end":{"line":96,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":26},"end":{"line":9,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":27},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":18},"end":{"line":13,"column":21}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":22,"column":5}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":23},"end":{"line":31,"column":5}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":16},"end":{"line":34,"column":5}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":16},"end":{"line":37,"column":5}},"line":35},"7":{"name":"(anonymous_7)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":10},"end":{"line":40,"column":5}},"line":38},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":16},"end":{"line":43,"column":5}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":23},"end":{"line":46,"column":5}},"line":44},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":17},"end":{"line":49,"column":5}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":15},"end":{"line":52,"column":5}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":24},"end":{"line":60,"column":5}},"line":57},"13":{"name":"(anonymous_13)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":16},"end":{"line":63,"column":5}},"line":61},"14":{"name":"(anonymous_14)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":16},"end":{"line":66,"column":5}},"line":64},"15":{"name":"(anonymous_15)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":10},"end":{"line":69,"column":5}},"line":67},"16":{"name":"(anonymous_16)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":16},"end":{"line":72,"column":5}},"line":70},"17":{"name":"(anonymous_17)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":24},"end":{"line":75,"column":5}},"line":73},"18":{"name":"(anonymous_18)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":17},"end":{"line":78,"column":5}},"line":76},"19":{"name":"(anonymous_19)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":15},"end":{"line":81,"column":5}},"line":79},"20":{"name":"(anonymous_20)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":22},"end":{"line":84,"column":5}},"line":82},"21":{"name":"(anonymous_21)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":46},"end":{"line":90,"column":5}},"line":87},"22":{"name":"(anonymous_22)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":47},"end":{"line":94,"column":5}},"line":91}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15},"1":{"loc":{"start":{"line":16,"column":19},"end":{"line":16,"column":78}},"type":"binary-expr","locations":[{"start":{"line":16,"column":19},"end":{"line":16,"column":36}},{"start":{"line":16,"column":40},"end":{"line":16,"column":78}}],"line":16},"2":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":1,"4":6,"5":19,"6":6,"7":3,"8":3,"9":1,"10":2,"11":1,"12":6,"13":6,"14":5,"15":7,"16":6,"17":2,"18":1,"19":1,"20":5,"21":19,"22":19,"23":2,"24":11,"25":1,"26":9,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1},"f":{"0":6,"1":19,"2":25,"3":6,"4":6,"5":5,"6":7,"7":6,"8":2,"9":1,"10":1,"11":5,"12":19,"13":2,"14":11,"15":1,"16":9,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"b":{"0":[3,3],"1":[3,2],"2":[1,2]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/MGPFallible.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/MGPFallible.ts"],"names":[],"mappings":"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","sourcesContent":["import { comparableEquals } from './Comparable';\nimport { MGPOptional } from './MGPOptional';\n\nexport abstract class MGPFallible<T> {\n\n    public static success<T>(value: T): MGPFallible<T> {\n        return new MGPFallibleSuccess(value);\n    }\n    public static failure<T>(reason: string): MGPFallible<T> {\n        return new MGPFallibleFailure(reason);\n    }\n\n    protected constructor() {}\n\n    public abstract isSuccess(): this is MGPFallibleSuccess<T>;\n\n    public abstract isFailure(): this is MGPFallibleFailure<T>;\n\n    public abstract get(): T;\n\n    public abstract getReason(): string;\n\n    public abstract getReasonOr(value: string): string;\n\n    public abstract toOptional(): MGPOptional<T>;\n\n    public equals(other: MGPFallible<T>): boolean {\n        if (this.isFailure()) {\n            return other.isFailure() && this.getReason() === other.getReason();\n        }\n        if (other.isFailure()) {\n            return false;\n        }\n        return comparableEquals(this.get(), other.get());\n    }\n}\n\nclass MGPFallibleSuccess<T> extends MGPFallible<T> {\n\n    private readonly __nominal: void; // For strict typing\n\n    public constructor(private readonly value: T) {\n        super();\n    }\n    public isSuccess(): this is MGPFallibleSuccess<T> {\n        return true;\n    }\n    public isFailure(): this is MGPFallibleFailure<T> {\n        return false;\n    }\n    public get(): T {\n        return this.value;\n    }\n    public getReason(): string {\n        throw new Error('Cannot get failure reason from a success');\n    }\n    public getReasonOr(value: string): string {\n        return value;\n    }\n    public toOptional(): MGPOptional<T> {\n        return MGPOptional.of(this.value);\n    }\n    public override toString(): string {\n        return `MGPFallible.success(${this.value})`;\n    }\n}\n\nclass MGPFallibleFailure<T> extends MGPFallible<T> {\n\n    private readonly __nominal: void; // For strict typing\n\n    public constructor(private readonly reason: string) {\n        super();\n    }\n    public isSuccess(): this is MGPFallibleSuccess<T> {\n        return false;\n    }\n    public isFailure(): this is MGPFallibleFailure<T> {\n        return true;\n    }\n    public get(): T {\n        throw new Error('Value is absent from failure, with the following reason: ' + this.reason);\n    }\n    public getReason(): string {\n        return this.reason;\n    }\n    public getReasonOr(_value: string): string {\n        return this.getReason();\n    }\n    public toOptional(): MGPOptional<T> {\n        return MGPOptional.empty();\n    }\n    public override toString(): string {\n        return `MGPFallible.failure(${this.reason})`;\n    }\n    public toOtherFallible<U>(): MGPFallible<U> {\n        return MGPFallible.failure(this.reason);\n    }\n}\n\nexport class MGPFallibleTestUtils {\n\n    public static expectToBeSuccess<T>(fallible: MGPFallible<T>, value: T): void {\n        expect(fallible.isSuccess()).toBeTrue();\n        expect(fallible.get()).toBe(value);\n    }\n\n    public static expectToBeFailure<T>(fallible: MGPFallible<T>, reason: string): void {\n        expect(fallible.isFailure()).toBeTrue();\n        expect(fallible.getReason()).toBe(reason);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1a962a856b3e449d178f5ff192532fd54c9b0b18","contentHash":"b25f48803de797edc8034b38b1cd69e0389e2289ce87fd9815aa6a41bdc1343b"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPOptional.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPOptional.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":38}},"5":{"start":{"line":12,"column":8},"end":{"line":13,"column":39}},"6":{"start":{"line":13,"column":12},"end":{"line":13,"column":39}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":37}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":37}},"9":{"start":{"line":24,"column":8},"end":{"line":41,"column":10}},"10":{"start":{"line":26,"column":16},"end":{"line":31,"column":17}},"11":{"start":{"line":27,"column":20},"end":{"line":27,"column":54}},"12":{"start":{"line":30,"column":20},"end":{"line":30,"column":32}},"13":{"start":{"line":34,"column":16},"end":{"line":39,"column":17}},"14":{"start":{"line":35,"column":20},"end":{"line":35,"column":47}},"15":{"start":{"line":38,"column":20},"end":{"line":38,"column":68}},"16":{"start":{"line":44,"column":8},"end":{"line":44,"column":27}},"17":{"start":{"line":47,"column":8},"end":{"line":47,"column":34}},"18":{"start":{"line":50,"column":8},"end":{"line":50,"column":34}},"19":{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},"20":{"start":{"line":54,"column":12},"end":{"line":54,"column":30}},"21":{"start":{"line":57,"column":12},"end":{"line":57,"column":47}},"22":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"23":{"start":{"line":62,"column":12},"end":{"line":62,"column":30}},"24":{"start":{"line":65,"column":12},"end":{"line":65,"column":32}},"25":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"26":{"start":{"line":70,"column":12},"end":{"line":70,"column":36}},"27":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"28":{"start":{"line":73,"column":12},"end":{"line":73,"column":25}},"29":{"start":{"line":75,"column":8},"end":{"line":75,"column":75}},"30":{"start":{"line":78,"column":8},"end":{"line":78,"column":50}},"31":{"start":{"line":81,"column":8},"end":{"line":86,"column":9}},"32":{"start":{"line":82,"column":12},"end":{"line":82,"column":41}},"33":{"start":{"line":85,"column":12},"end":{"line":85,"column":51}},"34":{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},"35":{"start":{"line":90,"column":12},"end":{"line":90,"column":49}},"36":{"start":{"line":93,"column":12},"end":{"line":93,"column":39}},"37":{"start":{"line":97,"column":0},"end":{"line":97,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":21},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":29},"end":{"line":15,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":19},"end":{"line":18,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":32},"end":{"line":42,"column":5}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":12},"end":{"line":25,"column":13}},"loc":{"start":{"line":25,"column":24},"end":{"line":32,"column":13}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":12},"end":{"line":33,"column":13}},"loc":{"start":{"line":33,"column":28},"end":{"line":40,"column":13}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":23},"end":{"line":45,"column":5}},"line":43},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":16},"end":{"line":48,"column":5}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":15},"end":{"line":51,"column":5}},"line":49},"9":{"name":"(anonymous_9)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":10},"end":{"line":59,"column":5}},"line":52},"10":{"name":"(anonymous_10)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":28},"end":{"line":67,"column":5}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":18},"end":{"line":76,"column":5}},"line":68},"12":{"name":"(anonymous_12)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":23},"end":{"line":79,"column":5}},"line":77},"13":{"name":"(anonymous_13)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":15},"end":{"line":87,"column":5}},"line":80},"14":{"name":"(anonymous_14)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":11},"end":{"line":95,"column":5}},"line":88}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":13,"column":39}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":13,"column":39}},{"start":{"line":12,"column":8},"end":{"line":13,"column":39}}],"line":12},"1":{"loc":{"start":{"line":26,"column":16},"end":{"line":31,"column":17}},"type":"if","locations":[{"start":{"line":26,"column":16},"end":{"line":31,"column":17}},{"start":{"line":26,"column":16},"end":{"line":31,"column":17}}],"line":26},"2":{"loc":{"start":{"line":34,"column":16},"end":{"line":39,"column":17}},"type":"if","locations":[{"start":{"line":34,"column":16},"end":{"line":39,"column":17}},{"start":{"line":34,"column":16},"end":{"line":39,"column":17}}],"line":34},"3":{"loc":{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},{"start":{"line":53,"column":8},"end":{"line":58,"column":9}}],"line":53},"4":{"loc":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},{"start":{"line":61,"column":8},"end":{"line":66,"column":9}}],"line":61},"5":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"6":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72},"7":{"loc":{"start":{"line":81,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":86,"column":9}},{"start":{"line":81,"column":8},"end":{"line":86,"column":9}}],"line":81},"8":{"loc":{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},{"start":{"line":89,"column":8},"end":{"line":94,"column":9}}],"line":89}},"s":{"0":1,"1":1,"2":1,"3":1,"4":51,"5":2,"6":1,"7":1,"8":24,"9":1,"10":2,"11":1,"12":1,"13":2,"14":1,"15":1,"16":75,"17":35,"18":20,"19":23,"20":22,"21":1,"22":2,"23":1,"24":1,"25":5,"26":1,"27":4,"28":1,"29":3,"30":1,"31":6,"32":3,"33":3,"34":2,"35":1,"36":1,"37":1},"f":{"0":51,"1":2,"2":24,"3":1,"4":2,"5":2,"6":75,"7":35,"8":20,"9":23,"10":2,"11":5,"12":1,"13":6,"14":2},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[22,1],"4":[1,1],"5":[1,4],"6":[1,3],"7":[3,3],"8":[1,1]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/MGPOptional.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/MGPOptional.ts"],"names":[],"mappings":"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","sourcesContent":["import { comparableEquals } from './Comparable';\nimport { Encoder } from './Encoder';\nimport { JSONValue } from './JSON';\n\nexport class MGPOptional<T> {\n\n    public static of<T>(value: T): MGPOptional<T> {\n        return new MGPOptional(value);\n    }\n\n    public static ofNullable<T>(value: T | null | undefined): MGPOptional<T> {\n        if (value == null) return MGPOptional.empty();\n        return MGPOptional.of(value);\n    }\n\n    public static empty<T>(): MGPOptional<T> {\n        return new MGPOptional(null as T | null);\n    }\n\n    /**\n     * Encodes a MGPOptional<T> using an encoder of T.\n     * It will use the same encoding as T, and use null to encode an empty optional.\n     */\n    public static getEncoder<T>(encoderT: Encoder<T>): Encoder<MGPOptional<T>> {\n        return new class extends Encoder<MGPOptional<T>> {\n            public encode(opt: MGPOptional<T>): JSONValue {\n                if (opt.isPresent()) {\n                    return encoderT.encode(opt.get());\n                } else {\n                    return null;\n                }\n            }\n            public decode(encoded: JSONValue): MGPOptional<T> {\n                if (encoded === null) {\n                    return MGPOptional.empty();\n                } else {\n                    return MGPOptional.of(encoderT.decode(encoded));\n                }\n            }\n        };\n    }\n\n    private constructor(private readonly value: T | null) {}\n\n    public isPresent(): boolean {\n        return this.value != null;\n    }\n\n    public isAbsent(): boolean {\n        return this.value == null;\n    }\n\n    public get(): T {\n        if (this.isPresent()) {\n            return this.value as T;\n        } else {\n            throw new Error('Value is absent');\n        }\n    }\n\n    public getOrElse(defaultValue: T): T {\n        if (this.isPresent()) {\n            return this.value as T;\n        } else {\n            return defaultValue;\n        }\n    }\n\n    public equals(other: MGPOptional<T>): boolean {\n        if (this.isAbsent()) {\n            return other.isAbsent();\n        }\n        if (other.isAbsent()) {\n            return false;\n        }\n        return comparableEquals(this.value, other.value);\n    }\n\n    public equalsValue(other: T): boolean {\n        return this.equals(MGPOptional.of(other));\n    }\n\n    public toString(): string {\n        if (this.isAbsent()) {\n            return 'MGPOptional.empty()';\n        } else {\n            return `MGPOptional.of(${this.value as T})`;\n        }\n    }\n\n    public map<U>(f: (value: T) => U): MGPOptional<U> {\n        if (this.isPresent()) {\n            return MGPOptional.of(f(this.get()));\n        } else {\n            return MGPOptional.empty();\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e7a054498f5a4410e786afc482d9788042edc551","contentHash":"236e6738ad241d806af7df65fe23e9482d7f9c84882c45061bd40c48875f2667"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Encoder.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Encoder.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":7,"column":8},"end":{"line":14,"column":10}},"4":{"start":{"line":9,"column":16},"end":{"line":9,"column":37}},"5":{"start":{"line":12,"column":16},"end":{"line":12,"column":41}},"6":{"start":{"line":18,"column":12},"end":{"line":18,"column":21}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":57}},"8":{"start":{"line":23,"column":8},"end":{"line":30,"column":10}},"9":{"start":{"line":25,"column":16},"end":{"line":25,"column":32}},"10":{"start":{"line":28,"column":16},"end":{"line":28,"column":33}},"11":{"start":{"line":33,"column":8},"end":{"line":50,"column":10}},"12":{"start":{"line":35,"column":31},"end":{"line":35,"column":44}},"13":{"start":{"line":36,"column":32},"end":{"line":36,"column":34}},"14":{"start":{"line":37,"column":16},"end":{"line":39,"column":19}},"15":{"start":{"line":38,"column":20},"end":{"line":38,"column":69}},"16":{"start":{"line":40,"column":16},"end":{"line":40,"column":31}},"17":{"start":{"line":43,"column":31},"end":{"line":43,"column":33}},"18":{"start":{"line":44,"column":16},"end":{"line":47,"column":19}},"19":{"start":{"line":45,"column":34},"end":{"line":45,"column":46}},"20":{"start":{"line":46,"column":20},"end":{"line":46,"column":62}},"21":{"start":{"line":48,"column":16},"end":{"line":48,"column":53}},"22":{"start":{"line":56,"column":8},"end":{"line":56,"column":127}},"23":{"start":{"line":57,"column":8},"end":{"line":77,"column":10}},"24":{"start":{"line":59,"column":33},"end":{"line":59,"column":34}},"25":{"start":{"line":60,"column":16},"end":{"line":68,"column":17}},"26":{"start":{"line":61,"column":20},"end":{"line":66,"column":21}},"27":{"start":{"line":62,"column":24},"end":{"line":65,"column":26}},"28":{"start":{"line":67,"column":20},"end":{"line":67,"column":33}},"29":{"start":{"line":72,"column":30},"end":{"line":72,"column":75}},"30":{"start":{"line":74,"column":32},"end":{"line":74,"column":80}},"31":{"start":{"line":75,"column":16},"end":{"line":75,"column":55}},"32":{"start":{"line":80,"column":8},"end":{"line":92,"column":10}},"33":{"start":{"line":82,"column":16},"end":{"line":86,"column":19}},"34":{"start":{"line":83,"column":41},"end":{"line":83,"column":58}},"35":{"start":{"line":84,"column":20},"end":{"line":84,"column":123}},"36":{"start":{"line":85,"column":20},"end":{"line":85,"column":40}},"37":{"start":{"line":89,"column":31},"end":{"line":89,"column":38}},"38":{"start":{"line":90,"column":16},"end":{"line":90,"column":50}},"39":{"start":{"line":95,"column":0},"end":{"line":95,"column":26}},"40":{"start":{"line":101,"column":24},"end":{"line":101,"column":45}},"41":{"start":{"line":102,"column":24},"end":{"line":102,"column":47}},"42":{"start":{"line":103,"column":8},"end":{"line":103,"column":105}},"43":{"start":{"line":106,"column":0},"end":{"line":106,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":43},"end":{"line":15,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":12},"end":{"line":8,"column":13}},"loc":{"start":{"line":8,"column":26},"end":{"line":10,"column":13}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":12},"end":{"line":11,"column":13}},"loc":{"start":{"line":11,"column":28},"end":{"line":13,"column":13}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":22},"end":{"line":21,"column":5}},"line":16},"4":{"name":"identity","decl":{"start":{"line":17,"column":17},"end":{"line":17,"column":25}},"loc":{"start":{"line":17,"column":29},"end":{"line":19,"column":9}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":41},"end":{"line":31,"column":5}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":12},"end":{"line":24,"column":13}},"loc":{"start":{"line":24,"column":27},"end":{"line":26,"column":13}},"line":24},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":12},"end":{"line":27,"column":13}},"loc":{"start":{"line":27,"column":29},"end":{"line":29,"column":13}},"line":27},"8":{"name":"(anonymous_8)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":43},"end":{"line":51,"column":5}},"line":32},"9":{"name":"(anonymous_9)","decl":{"start":{"line":34,"column":12},"end":{"line":34,"column":13}},"loc":{"start":{"line":34,"column":26},"end":{"line":41,"column":13}},"line":34},"10":{"name":"(anonymous_10)","decl":{"start":{"line":37,"column":44},"end":{"line":37,"column":45}},"loc":{"start":{"line":37,"column":53},"end":{"line":39,"column":17}},"line":37},"11":{"name":"(anonymous_11)","decl":{"start":{"line":42,"column":12},"end":{"line":42,"column":13}},"loc":{"start":{"line":42,"column":28},"end":{"line":49,"column":13}},"line":42},"12":{"name":"(anonymous_12)","decl":{"start":{"line":44,"column":56},"end":{"line":44,"column":57}},"loc":{"start":{"line":44,"column":65},"end":{"line":47,"column":17}},"line":44},"13":{"name":"(anonymous_13)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":49},"end":{"line":78,"column":5}},"line":55},"14":{"name":"(anonymous_14)","decl":{"start":{"line":58,"column":12},"end":{"line":58,"column":13}},"loc":{"start":{"line":58,"column":26},"end":{"line":69,"column":13}},"line":58},"15":{"name":"(anonymous_15)","decl":{"start":{"line":70,"column":12},"end":{"line":70,"column":13}},"loc":{"start":{"line":70,"column":28},"end":{"line":76,"column":13}},"line":70},"16":{"name":"(anonymous_16)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":25},"end":{"line":93,"column":5}},"line":79},"17":{"name":"(anonymous_17)","decl":{"start":{"line":81,"column":12},"end":{"line":81,"column":13}},"loc":{"start":{"line":81,"column":25},"end":{"line":87,"column":13}},"line":81},"18":{"name":"(anonymous_18)","decl":{"start":{"line":82,"column":32},"end":{"line":82,"column":33}},"loc":{"start":{"line":82,"column":39},"end":{"line":86,"column":17}},"line":82},"19":{"name":"(anonymous_19)","decl":{"start":{"line":88,"column":12},"end":{"line":88,"column":13}},"loc":{"start":{"line":88,"column":28},"end":{"line":91,"column":13}},"line":88},"20":{"name":"(anonymous_20)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":47},"end":{"line":104,"column":5}},"line":100}},"branchMap":{"0":{"loc":{"start":{"line":61,"column":20},"end":{"line":66,"column":21}},"type":"if","locations":[{"start":{"line":61,"column":20},"end":{"line":66,"column":21}},{"start":{"line":61,"column":20},"end":{"line":66,"column":21}}],"line":61}},"s":{"0":1,"1":1,"2":1,"3":7,"4":16,"5":16,"6":30,"7":6,"8":1,"9":1,"10":1,"11":2,"12":2,"13":2,"14":2,"15":5,"16":2,"17":2,"18":2,"19":5,"20":5,"21":2,"22":1,"23":1,"24":5,"25":5,"26":7,"27":5,"28":2,"29":5,"30":5,"31":5,"32":1,"33":1,"34":3,"35":3,"36":3,"37":1,"38":1,"39":1,"40":13,"41":13,"42":13,"43":1},"f":{"0":7,"1":16,"2":16,"3":6,"4":30,"5":1,"6":1,"7":1,"8":2,"9":2,"10":5,"11":2,"12":5,"13":1,"14":5,"15":5,"16":1,"17":1,"18":3,"19":1,"20":13},"b":{"0":[5,2]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/Encoder.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/Encoder.ts"],"names":[],"mappings":"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","sourcesContent":["import { JSONValue, JSONValueWithoutArray } from './JSON';\nimport { Utils } from './Utils';\n\n// Used internally. If T = [A, B, C], then\n// EncoderArray<T> = [Encoder<A>, Encoder<B>, Encoder<C>]\ntype EncoderArray<T> = { [P in keyof T]: Encoder<T[P]> };\n\nexport abstract class Encoder<T> {\n\n    public static fromFunctions<U>(toJSON: (value: U) => JSONValueWithoutArray,\n                                   fromJSON: (json: JSONValueWithoutArray) => U)\n    : Encoder<U> {\n        return new class extends Encoder<U> {\n            public encode(value: U): JSONValueWithoutArray {\n                return toJSON(value);\n            }\n            public decode(encoded: NonNullable<JSONValueWithoutArray>): U {\n                return fromJSON(encoded);\n            }\n        };\n    }\n\n    public static identity<U extends JSONValueWithoutArray>(): Encoder<U> {\n        function identity(x: U): U {\n            return x;\n        }\n        return Encoder.fromFunctions(identity, identity);\n    }\n\n    public static constant<U>(constant: JSONValueWithoutArray, onlyValue: U): Encoder<U> {\n        return new class extends Encoder<U> {\n            public encode(_value: U): JSONValueWithoutArray {\n                return constant;\n            }\n            public decode(_encoded: NonNullable<JSONValueWithoutArray>): U {\n                return onlyValue;\n            }\n        };\n    }\n\n    public static tuple<T, Fields extends object>(encoders: EncoderArray<Fields>,\n                                                  encode: (t: T) => Fields,\n                                                  decode: (fields: Fields) => T): Encoder<T> {\n        return new class extends Encoder<T> {\n            public encode(value: T): JSONValueWithoutArray {\n                const fields: Fields = encode(value);\n                const encoded: JSONValueWithoutArray = {};\n                Object.keys(fields).forEach((key: string): void => {\n                    encoded[key] = encoders[key].encode(fields[key]);\n                });\n                return encoded;\n            }\n            public decode(encoded: NonNullable<JSONValueWithoutArray>): T {\n                const fields: Record<string, unknown> = {};\n                Object.keys(encoders).reverse().forEach((key: string): void => {\n                    const field: JSONValue = encoded[key] as NonNullable<JSONValue>;\n                    fields[key] = encoders[key].decode(field);\n                });\n                return decode(Object.values(fields) as Fields);\n            }\n        };\n    }\n\n    /**\n     * This creates a \"sum\" encoder, i.e., it encodes values of either type T and U and V and ...\n     */\n    public static disjunction<T>(typePredicates: ((value: unknown) => boolean)[],\n                                 encoders: Encoder<unknown>[],\n    ): Encoder<T>\n    {\n        Utils.assert(typePredicates.length === encoders.length, 'typePredicates and encoders should have same length');\n        return new class extends Encoder<T> {\n            public encode(value: T): JSONValueWithoutArray {\n                let indexClass: number = 0;\n                for (const identifier of typePredicates) {\n                    if (identifier(value) === true) {\n                        return {\n                            type: indexClass,\n                            encoded: encoders[indexClass].encode(value),\n                        };\n                    }\n                    indexClass++;\n                }\n            }\n            public decode(encoded: JSONValueWithoutArray): T {\n                // eslint-disable-next-line dot-notation\n                const type_: number = Utils.getNonNullable(encoded)['type'];\n                // eslint-disable-next-line dot-notation\n                const content: JSONValue = Utils.getNonNullable(encoded)['encoded'] as JSONValue;\n                return encoders[type_].decode(content) as T;\n            }\n        };\n    }\n\n    public static list<T>(encoder: Encoder<T>): Encoder<Array<T>> {\n        return new class extends Encoder<Array<T>> {\n            public encode(list: T[]): JSONValue {\n                return list.map((t: T): JSONValueWithoutArray => {\n                    const encodedCoord: JSONValue = encoder.encode(t);\n                    Utils.assert(Array.isArray(encodedCoord) === false,\n                                 'This encoder should not encode as array');\n                    return encodedCoord as JSONValueWithoutArray;\n                });\n            }\n            public decode(encoded: JSONValue): T[] {\n                const casted: Array<JSONValue> = encoded as Array<JSONValue>;\n                return casted.map(encoder.decode);\n            }\n        };\n    }\n\n    public abstract encode(move: T): JSONValue;\n\n    public abstract decode(encodedMove: JSONValue): T;\n}\n\n/**\n * This is a helper class to test encoders\n */\nexport class EncoderTestUtils {\n    public static expectToBeBijective<T>(encoder: Encoder<T>, value: T): void {\n        const encoded: JSONValue = encoder.encode(value);\n        const decoded: T = encoder.decode(encoded);\n        expect(decoded).withContext(`Expected decoded value (${decoded}) to be ${value}`).toEqual(value);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"701b7208333abc46ebf20da96dfe1f3918010f8e","contentHash":"4665f173f99e94b95ef3a740e76d2353c9ffd2baf89f46b99e7e47edf8b9207e"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\TestUtils.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\TestUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"5":{"start":{"line":9,"column":12},"end":{"line":9,"column":149}},"6":{"start":{"line":9,"column":82},"end":{"line":9,"column":147}},"7":{"start":{"line":11,"column":8},"end":{"line":13,"column":57}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":99}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":44},"end":{"line":15,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":58},"end":{"line":9,"column":59}},"loc":{"start":{"line":9,"column":82},"end":{"line":9,"column":147}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},{"start":{"line":8,"column":8},"end":{"line":10,"column":9}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":3,"6":4,"7":4,"8":4,"9":1},"f":{"0":4,"1":4},"b":{"0":[3,1]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/TestUtils.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/TestUtils.ts"],"names":[],"mappings":";;;AAAA,mDAAgD;AAChD,mCAAgC;AAEhC,MAAa,SAAS;IAEX,MAAM,CAAC,mBAAmB,CAAC,IAAgB,EAAE,KAAa;QAC7D,IAAI,OAAO,CAAC,KAAK,CAAC,aAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE,CAAC;YAC1C,KAAK,CAAC,aAAK,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAiB,EAAE,OAAe,EAAE,EAAE,CACzE,6BAAa,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;QAC3D,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;aACP,WAAW,CAAC,8BAA8B,GAAG,KAAK,CAAC;aACnD,YAAY,CAAC,qBAAqB,GAAG,KAAK,CAAC,CAAC;QACjD,MAAM,CAAC,aAAK,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,mBAAmB,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IACvF,CAAC;CACJ;AAZD,8BAYC","sourcesContent":["import { MGPValidation } from './MGPValidation';\nimport { Utils } from './Utils';\n\nexport class TestUtils {\n\n    public static expectToThrowAndLog(func: () => void, error: string): void {\n        if (jasmine.isSpy(Utils.logError) === false) {\n            spyOn(Utils, 'logError').and.callFake((component: string, message: string) =>\n                MGPValidation.failure(component + ': ' + message));\n        }\n        expect(func)\n            .withContext('Expected Assertion failure: ' + error)\n            .toThrowError('Assertion failure: ' + error);\n        expect(Utils.logError).toHaveBeenCalledWith('Assertion failure', error, undefined);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"775cc2e37a9f3cae7baa217229428ef31d90aaad","contentHash":"e15983247fb0d3af0729fa2f7a2de7c1fc2acb05e3d8f7dfe3093614822d903a"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Combinatorics.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Combinatorics.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":115}},"4":{"start":{"line":8,"column":8},"end":{"line":12,"column":11}},"5":{"start":{"line":9,"column":12},"end":{"line":9,"column":48}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":52}},"7":{"start":{"line":16,"column":23},"end":{"line":16,"column":38}},"8":{"start":{"line":17,"column":23},"end":{"line":17,"column":41}},"9":{"start":{"line":18,"column":18},"end":{"line":18,"column":43}},"10":{"start":{"line":19,"column":16},"end":{"line":19,"column":17}},"11":{"start":{"line":20,"column":8},"end":{"line":34,"column":9}},"12":{"start":{"line":21,"column":12},"end":{"line":33,"column":13}},"13":{"start":{"line":22,"column":26},"end":{"line":22,"column":39}},"14":{"start":{"line":23,"column":32},"end":{"line":23,"column":43}},"15":{"start":{"line":24,"column":16},"end":{"line":24,"column":42}},"16":{"start":{"line":25,"column":16},"end":{"line":25,"column":38}},"17":{"start":{"line":26,"column":16},"end":{"line":26,"column":23}},"18":{"start":{"line":27,"column":16},"end":{"line":27,"column":22}},"19":{"start":{"line":28,"column":16},"end":{"line":28,"column":46}},"20":{"start":{"line":31,"column":16},"end":{"line":31,"column":25}},"21":{"start":{"line":32,"column":16},"end":{"line":32,"column":20}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":22}},"23":{"start":{"line":39,"column":12},"end":{"line":53,"column":13}},"24":{"start":{"line":40,"column":16},"end":{"line":40,"column":28}},"25":{"start":{"line":43,"column":32},"end":{"line":43,"column":34}},"26":{"start":{"line":44,"column":16},"end":{"line":51,"column":17}},"27":{"start":{"line":45,"column":34},"end":{"line":45,"column":49}},"28":{"start":{"line":46,"column":20},"end":{"line":49,"column":21}},"29":{"start":{"line":47,"column":24},"end":{"line":47,"column":43}},"30":{"start":{"line":48,"column":24},"end":{"line":48,"column":45}},"31":{"start":{"line":50,"column":20},"end":{"line":50,"column":28}},"32":{"start":{"line":52,"column":16},"end":{"line":52,"column":31}},"33":{"start":{"line":55,"column":8},"end":{"line":55,"column":32}},"34":{"start":{"line":58,"column":0},"end":{"line":58,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":43},"end":{"line":13,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":57},"end":{"line":8,"column":58}},"loc":{"start":{"line":8,"column":69},"end":{"line":10,"column":9}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":18},"end":{"line":10,"column":19}},"loc":{"start":{"line":10,"column":49},"end":{"line":12,"column":9}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":37},"end":{"line":36,"column":5}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":44},"end":{"line":56,"column":5}},"line":37},"5":{"name":"subsets","decl":{"start":{"line":38,"column":17},"end":{"line":38,"column":24}},"loc":{"start":{"line":38,"column":40},"end":{"line":54,"column":9}},"line":38}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":33,"column":13}},{"start":{"line":21,"column":12},"end":{"line":33,"column":13}}],"line":21},"1":{"loc":{"start":{"line":22,"column":26},"end":{"line":22,"column":39}},"type":"binary-expr","locations":[{"start":{"line":22,"column":26},"end":{"line":22,"column":31}},{"start":{"line":22,"column":35},"end":{"line":22,"column":39}}],"line":22},"2":{"loc":{"start":{"line":39,"column":12},"end":{"line":53,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":53,"column":13}},{"start":{"line":39,"column":12},"end":{"line":53,"column":13}}],"line":39},"3":{"loc":{"start":{"line":39,"column":16},"end":{"line":39,"column":54}},"type":"binary-expr","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":40}},{"start":{"line":39,"column":44},"end":{"line":39,"column":54}}],"line":39}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":2,"7":4,"8":4,"9":4,"10":4,"11":4,"12":15,"13":8,"14":8,"15":8,"16":8,"17":8,"18":8,"19":8,"20":7,"21":7,"22":4,"23":12,"24":6,"25":6,"26":6,"27":10,"28":10,"29":12,"30":12,"31":10,"32":6,"33":2,"34":1},"f":{"0":1,"1":3,"2":2,"3":4,"4":2,"5":12},"b":{"0":[8,7],"1":[8,6],"2":[6,6],"3":[12,8]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/Combinatorics.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/Combinatorics.ts"],"names":[],"mappings":";;;AAAA,mCAAgC;AAEhC,MAAa,aAAa;IAEf,MAAM,CAAC,eAAe,CAAI,QAAa,EAAE,IAAY;QACxD,aAAK,CAAC,MAAM,CAAC,IAAI,IAAI,QAAQ,CAAC,MAAM,EAAE,2DAA2D,CAAC,CAAC;QACnG,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAW,EAAS,EAAE;YACpE,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAkB,EAAE,YAAmB,EAAS,EAAE;YACzD,OAAO,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,eAAe,CAAI,QAAa;QAC1C,kEAAkE;QAClE,MAAM,MAAM,GAAW,QAAQ,CAAC,MAAM,CAAC;QACvC,MAAM,MAAM,GAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;QACzC,MAAM,CAAC,GAAkB,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,GAAW,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC;YAChB,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;gBACX,MAAM,CAAC,GAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,OAAO,GAAM,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC1B,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;gBACtB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACP,CAAC,GAAG,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;YAClC,CAAC;iBAAM,CAAC;gBACJ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC;YACR,CAAC;QACL,CAAC;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,MAAM,CAAC,gBAAgB,CAAI,QAAa,EAAE,IAAY;QACzD,SAAS,OAAO,CAAC,MAAc,EAAE,KAAa;YAC1C,IAAI,QAAQ,CAAC,MAAM,IAAI,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC;gBACzC,OAAO,CAAC,EAAE,CAAC,CAAC;YAChB,CAAC;iBAAM,CAAC;gBACJ,MAAM,OAAO,GAAU,EAAE,CAAC;gBAC1B,OAAO,KAAK,IAAI,QAAQ,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC;oBACvC,MAAM,KAAK,GAAM,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACjC,KAAK,MAAM,MAAM,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;wBAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACnB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACzB,CAAC;oBACD,EAAE,KAAK,CAAC;gBACZ,CAAC;gBACD,OAAO,OAAO,CAAC;YACnB,CAAC;QACL,CAAC;QACD,OAAO,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC;CAEJ;AAtDD,sCAsDC","sourcesContent":["import { Utils } from './Utils';\n\nexport class Combinatorics {\n\n    public static getCombinations<T>(elements: T[], size: number): T[][] {\n        Utils.assert(size <= elements.length, 'cannot compute combinations for less elements than needed');\n        return this.getSubsetsOfSize(elements, size).map((subset: T[]): T[][] => {\n            return this.getPermutations(subset);\n        }).reduce((accumulator: T[][], combinations: T[][]): T[][] => {\n            return accumulator.concat(combinations);\n        });\n    }\n\n    public static getPermutations<T>(elements: T[]): T[][] {\n        // Uses Heap's algorithm to compute all permutations of `elements`\n        const length: number = elements.length;\n        const result: T[][] = [elements.slice()];\n        const c: Array<number> = new Array(length).fill(0);\n        let i: number = 1;\n        while (i < length) {\n            if (c[i] < i) {\n                const k: number = i % 2 && c[i];\n                const element: T = elements[i];\n                elements[i] = elements[k];\n                elements[k] = element;\n                ++c[i];\n                i = 1;\n                result.push(elements.slice());\n            } else {\n                c[i] = 0;\n                ++i;\n            }\n        }\n        return result;\n    }\n\n    public static getSubsetsOfSize<T>(elements: T[], size: number): T[][] {\n        function subsets(length: number, start: number): T[][] {\n            if (elements.length <= start || length < 1) {\n                return [[]];\n            } else {\n                const results: T[][] = [];\n                while (start <= elements.length - length) {\n                    const first: T = elements[start];\n                    for (const subset of subsets(length - 1, start + 1)) {\n                        subset.push(first);\n                        results.push(subset);\n                    }\n                    ++start;\n                }\n                return results;\n            }\n        }\n        return subsets(size, 0);\n    }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b8d81f5dcfb6d326bb5ca4315d18d4e30ced8c3a","contentHash":"9d08ba3845bdd46dc4ce7f81f7721407dbaf4fba9177c92750ed961eb4d64f9c"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPMap.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPMap.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":46}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":44}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":16},"end":{"line":7,"column":34}},"6":{"start":{"line":12,"column":21},"end":{"line":12,"column":40}},"7":{"start":{"line":13,"column":20},"end":{"line":13,"column":32}},"8":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"9":{"start":{"line":15,"column":12},"end":{"line":15,"column":38}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":19}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":23}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":39}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":32}},"14":{"start":{"line":27,"column":8},"end":{"line":31,"column":9}},"15":{"start":{"line":28,"column":12},"end":{"line":30,"column":13}},"16":{"start":{"line":29,"column":16},"end":{"line":29,"column":66}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":49}},"18":{"start":{"line":35,"column":8},"end":{"line":40,"column":9}},"19":{"start":{"line":36,"column":12},"end":{"line":36,"column":61}},"20":{"start":{"line":39,"column":12},"end":{"line":39,"column":53}},"21":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"22":{"start":{"line":44,"column":12},"end":{"line":44,"column":30}},"23":{"start":{"line":48,"column":8},"end":{"line":48,"column":42}},"24":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"25":{"start":{"line":50,"column":12},"end":{"line":50,"column":45}},"26":{"start":{"line":54,"column":8},"end":{"line":54,"column":111}},"27":{"start":{"line":57,"column":8},"end":{"line":57,"column":39}},"28":{"start":{"line":58,"column":8},"end":{"line":64,"column":9}},"29":{"start":{"line":59,"column":12},"end":{"line":63,"column":13}},"30":{"start":{"line":60,"column":33},"end":{"line":60,"column":44}},"31":{"start":{"line":61,"column":16},"end":{"line":61,"column":36}},"32":{"start":{"line":62,"column":16},"end":{"line":62,"column":62}},"33":{"start":{"line":65,"column":8},"end":{"line":65,"column":38}},"34":{"start":{"line":66,"column":8},"end":{"line":66,"column":49}},"35":{"start":{"line":69,"column":8},"end":{"line":69,"column":92}},"36":{"start":{"line":69,"column":40},"end":{"line":69,"column":90}},"37":{"start":{"line":72,"column":8},"end":{"line":72,"column":31}},"38":{"start":{"line":75,"column":8},"end":{"line":75,"column":50}},"39":{"start":{"line":75,"column":39},"end":{"line":75,"column":48}},"40":{"start":{"line":78,"column":8},"end":{"line":78,"column":52}},"41":{"start":{"line":78,"column":39},"end":{"line":78,"column":50}},"42":{"start":{"line":81,"column":8},"end":{"line":81,"column":52}},"43":{"start":{"line":84,"column":25},"end":{"line":84,"column":37}},"44":{"start":{"line":85,"column":8},"end":{"line":89,"column":9}},"45":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"46":{"start":{"line":87,"column":16},"end":{"line":87,"column":59}},"47":{"start":{"line":90,"column":8},"end":{"line":90,"column":24}},"48":{"start":{"line":93,"column":8},"end":{"line":93,"column":43}},"49":{"start":{"line":94,"column":25},"end":{"line":94,"column":38}},"50":{"start":{"line":95,"column":8},"end":{"line":101,"column":9}},"51":{"start":{"line":96,"column":12},"end":{"line":96,"column":83}},"52":{"start":{"line":99,"column":12},"end":{"line":99,"column":36}},"53":{"start":{"line":100,"column":12},"end":{"line":100,"column":28}},"54":{"start":{"line":104,"column":8},"end":{"line":104,"column":39}},"55":{"start":{"line":105,"column":8},"end":{"line":110,"column":9}},"56":{"start":{"line":106,"column":12},"end":{"line":106,"column":81}},"57":{"start":{"line":109,"column":12},"end":{"line":109,"column":54}},"58":{"start":{"line":113,"column":8},"end":{"line":113,"column":42}},"59":{"start":{"line":114,"column":8},"end":{"line":123,"column":9}},"60":{"start":{"line":114,"column":21},"end":{"line":114,"column":22}},"61":{"start":{"line":115,"column":26},"end":{"line":115,"column":37}},"62":{"start":{"line":116,"column":12},"end":{"line":122,"column":13}},"63":{"start":{"line":117,"column":33},"end":{"line":117,"column":50}},"64":{"start":{"line":118,"column":38},"end":{"line":118,"column":58}},"65":{"start":{"line":119,"column":37},"end":{"line":119,"column":58}},"66":{"start":{"line":120,"column":16},"end":{"line":120,"column":62}},"67":{"start":{"line":121,"column":16},"end":{"line":121,"column":32}},"68":{"start":{"line":124,"column":8},"end":{"line":124,"column":80}},"69":{"start":{"line":128,"column":23},"end":{"line":128,"column":45}},"70":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"71":{"start":{"line":130,"column":12},"end":{"line":130,"column":49}},"72":{"start":{"line":132,"column":8},"end":{"line":132,"column":22}},"73":{"start":{"line":135,"column":27},"end":{"line":135,"column":43}},"74":{"start":{"line":136,"column":28},"end":{"line":136,"column":45}},"75":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"76":{"start":{"line":138,"column":12},"end":{"line":138,"column":25}},"77":{"start":{"line":140,"column":8},"end":{"line":147,"column":9}},"78":{"start":{"line":141,"column":30},"end":{"line":141,"column":49}},"79":{"start":{"line":142,"column":31},"end":{"line":142,"column":45}},"80":{"start":{"line":143,"column":12},"end":{"line":143,"column":117}},"81":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"82":{"start":{"line":145,"column":16},"end":{"line":145,"column":29}},"83":{"start":{"line":148,"column":8},"end":{"line":148,"column":20}},"84":{"start":{"line":151,"column":0},"end":{"line":151,"column":24}},"85":{"start":{"line":154,"column":28},"end":{"line":154,"column":47}},"86":{"start":{"line":155,"column":8},"end":{"line":165,"column":9}},"87":{"start":{"line":156,"column":26},"end":{"line":156,"column":45}},"88":{"start":{"line":157,"column":12},"end":{"line":164,"column":13}},"89":{"start":{"line":158,"column":16},"end":{"line":158,"column":54}},"90":{"start":{"line":161,"column":31},"end":{"line":161,"column":52}},"91":{"start":{"line":162,"column":16},"end":{"line":162,"column":32}},"92":{"start":{"line":163,"column":16},"end":{"line":163,"column":47}},"93":{"start":{"line":166,"column":8},"end":{"line":166,"column":27}},"94":{"start":{"line":169,"column":0},"end":{"line":169,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":24},"end":{"line":18,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":47},"end":{"line":22,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":20},"end":{"line":25,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":13},"end":{"line":33,"column":5}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":17},"end":{"line":41,"column":5}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":22},"end":{"line":46,"column":5}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":14},"end":{"line":52,"column":5}},"line":47},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":37},"end":{"line":55,"column":5}},"line":53},"8":{"name":"(anonymous_8)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":20},"end":{"line":67,"column":5}},"line":56},"9":{"name":"(anonymous_9)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":21},"end":{"line":70,"column":5}},"line":68},"10":{"name":"(anonymous_10)","decl":{"start":{"line":69,"column":29},"end":{"line":69,"column":30}},"loc":{"start":{"line":69,"column":40},"end":{"line":69,"column":90}},"line":69},"11":{"name":"(anonymous_11)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":11},"end":{"line":73,"column":5}},"line":71},"12":{"name":"(anonymous_12)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":15},"end":{"line":76,"column":5}},"line":74},"13":{"name":"(anonymous_13)","decl":{"start":{"line":75,"column":28},"end":{"line":75,"column":29}},"loc":{"start":{"line":75,"column":39},"end":{"line":75,"column":48}},"line":75},"14":{"name":"(anonymous_14)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":17},"end":{"line":79,"column":5}},"line":77},"15":{"name":"(anonymous_15)","decl":{"start":{"line":78,"column":28},"end":{"line":78,"column":29}},"loc":{"start":{"line":78,"column":39},"end":{"line":78,"column":50}},"line":78},"16":{"name":"(anonymous_16)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":16},"end":{"line":82,"column":5}},"line":80},"17":{"name":"(anonymous_17)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":22},"end":{"line":91,"column":5}},"line":83},"18":{"name":"(anonymous_18)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":27},"end":{"line":102,"column":5}},"line":92},"19":{"name":"(anonymous_19)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":25},"end":{"line":111,"column":5}},"line":103},"20":{"name":"(anonymous_20)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":16},"end":{"line":125,"column":5}},"line":112},"21":{"name":"(anonymous_21)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":14},"end":{"line":133,"column":5}},"line":126},"22":{"name":"(anonymous_22)","decl":{"start":{"line":134,"column":4},"end":{"line":134,"column":5}},"loc":{"start":{"line":134,"column":18},"end":{"line":149,"column":5}},"line":134},"23":{"name":"(anonymous_23)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":14},"end":{"line":167,"column":5}},"line":153}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":16},"end":{"line":19,"column":24}},"type":"default-arg","locations":[{"start":{"line":19,"column":22},"end":{"line":19,"column":24}}],"line":19},"1":{"loc":{"start":{"line":19,"column":26},"end":{"line":19,"column":45}},"type":"default-arg","locations":[{"start":{"line":19,"column":40},"end":{"line":19,"column":45}}],"line":19},"2":{"loc":{"start":{"line":28,"column":12},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":28,"column":12},"end":{"line":30,"column":13}},{"start":{"line":28,"column":12},"end":{"line":30,"column":13}}],"line":28},"3":{"loc":{"start":{"line":35,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":40,"column":9}},{"start":{"line":35,"column":8},"end":{"line":40,"column":9}}],"line":35},"4":{"loc":{"start":{"line":59,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":59,"column":12},"end":{"line":63,"column":13}},{"start":{"line":59,"column":12},"end":{"line":63,"column":13}}],"line":59},"5":{"loc":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},{"start":{"line":86,"column":12},"end":{"line":88,"column":13}}],"line":86},"6":{"loc":{"start":{"line":95,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":101,"column":9}},{"start":{"line":95,"column":8},"end":{"line":101,"column":9}}],"line":95},"7":{"loc":{"start":{"line":105,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":110,"column":9}},{"start":{"line":105,"column":8},"end":{"line":110,"column":9}}],"line":105},"8":{"loc":{"start":{"line":116,"column":12},"end":{"line":122,"column":13}},"type":"if","locations":[{"start":{"line":116,"column":12},"end":{"line":122,"column":13}},{"start":{"line":116,"column":12},"end":{"line":122,"column":13}}],"line":116},"9":{"loc":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},{"start":{"line":137,"column":8},"end":{"line":139,"column":9}}],"line":137},"10":{"loc":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},{"start":{"line":144,"column":12},"end":{"line":146,"column":13}}],"line":144},"11":{"loc":{"start":{"line":157,"column":12},"end":{"line":164,"column":13}},"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":164,"column":13}},{"start":{"line":157,"column":12},"end":{"line":164,"column":13}}],"line":157}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":30,"7":30,"8":30,"9":44,"10":30,"11":39,"12":39,"13":4,"14":22,"15":29,"16":20,"17":2,"18":2,"19":1,"20":1,"21":1,"22":2,"23":1,"24":1,"25":2,"26":72,"27":4,"28":4,"29":5,"30":3,"31":3,"32":3,"33":1,"34":1,"35":66,"36":30,"37":4,"38":12,"39":19,"40":1,"41":2,"42":7,"43":1,"44":1,"45":2,"46":1,"47":1,"48":2,"49":2,"50":2,"51":1,"52":1,"53":1,"54":62,"55":61,"56":1,"57":60,"58":3,"59":2,"60":2,"61":2,"62":2,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":3,"70":3,"71":6,"72":3,"73":3,"74":3,"75":3,"76":1,"77":2,"78":2,"79":2,"80":2,"81":2,"82":1,"83":1,"84":1,"85":1,"86":1,"87":3,"88":3,"89":1,"90":2,"91":2,"92":2,"93":1,"94":1},"f":{"0":30,"1":39,"2":4,"3":22,"4":2,"5":1,"6":1,"7":72,"8":4,"9":66,"10":30,"11":4,"12":12,"13":19,"14":1,"15":2,"16":7,"17":1,"18":2,"19":62,"20":3,"21":3,"22":3,"23":1},"b":{"0":[39],"1":[39],"2":[20,9],"3":[1,1],"4":[3,2],"5":[1,1],"6":[1,1],"7":[1,60],"8":[1,1],"9":[1,2],"10":[1,1],"11":[1,2]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/MGPMap.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/MGPMap.ts"],"names":[],"mappings":"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","sourcesContent":["import { MGPOptional } from './MGPOptional';\nimport { Comparable, comparableEquals } from './Comparable';\nimport { MGPSet } from './MGPSet';\nimport { Utils } from './Utils';\n\nexport class MGPMap<K extends NonNullable<Comparable>, V extends NonNullable<unknown>> {\n\n    public static from<K extends string | number, V extends NonNullable<unknown>>(record: Record<K, V>)\n    : MGPMap<K, V>\n    {\n        const keys: K[] = Object.keys(record) as K[];\n        const map: MGPMap<K, V> = new MGPMap();\n        for (const key of keys) {\n            map.set(key, record[key]);\n        }\n        return map;\n    }\n\n    public constructor(private map: {key: K, value: V}[] = [],\n                       private isImmutable: boolean = false)\n    {\n    }\n\n    public makeImmutable(): void {\n        this.isImmutable = true;\n    }\n\n    public get(key: K): MGPOptional<V> {\n        for (const keymap of this.map) {\n            if (comparableEquals(keymap.key, key)) {\n                return MGPOptional.of(keymap.value);\n            }\n        }\n        return MGPOptional.empty();\n    }\n\n    public getAnyPair(): MGPOptional<{key: K, value: V}> {\n        if (this.size() > 0) {\n            return MGPOptional.of(this.map[0]);\n        } else {\n            return MGPOptional.empty();\n        }\n    }\n\n    public forEach(callback: (item: {key: K, value: V}) => void): void {\n        for (const element of this.map) {\n            callback(element);\n        }\n    }\n\n    public putAll(m: MGPMap<K, V>): void {\n        this.assertImmutability('putAll');\n        for (const entry of m.map) {\n            this.put(entry.key, entry.value);\n        }\n    }\n\n    public assertImmutability(methodCalled: string): void {\n        Utils.assert(this.isImmutable === false,\n                     'Cannot call ' + methodCalled + ' on immutable map!');\n    }\n\n    public put(key: K, value: V): MGPOptional<V> {\n        this.assertImmutability('put');\n        for (const entry of this.map) {\n            if (comparableEquals(entry.key, key)) {\n                const oldValue: V = entry.value;\n                entry.value = value;\n                return MGPOptional.of(oldValue);\n            }\n        }\n        this.map.push({ key, value });\n        return MGPOptional.empty();\n    }\n\n    public containsKey(key: K): boolean {\n        return this.map.some((entry: {key: K, value: V}) => comparableEquals(entry.key, key));\n    }\n\n    public size(): number {\n        return this.map.length;\n    }\n\n    public listKeys(): K[] {\n        return this.map.map((entry: {key: K, value: V}) => entry.key);\n    }\n\n    public listValues(): V[] {\n        return this.map.map((entry: {key: K, value: V}) => entry.value);\n    }\n\n    public getKeySet(): MGPSet<K> {\n        return new MGPSet<K>(this.listKeys());\n    }\n\n    public filter(predicate: (key: K, value: V) => boolean): MGPMap<K, V> {\n        const filtered: MGPMap<K, V> = new MGPMap();\n        for (const keyValue of this.map) {\n            if (predicate(keyValue.key, keyValue.value)) {\n                filtered.set(keyValue.key, keyValue.value);\n            }\n        }\n        return filtered;\n    }\n\n    public replace(key: K, newValue: V): V {\n        this.assertImmutability('replace');\n        const oldValue: MGPOptional<V> = this.get(key);\n        if (oldValue.isAbsent()) {\n            throw new Error('No Value to replace for key '+ key.toString() + '!');\n        } else {\n            this.put(key, newValue);\n            return newValue;\n        }\n    }\n\n    public set(key: K, firstValue: V): void {\n        this.assertImmutability('set');\n        if (this.containsKey(key)) {\n            throw new Error('Key ' + key.toString() + ' already exists in map!');\n        } else {\n            this.map.push({ key, value: firstValue });\n        }\n    }\n\n    public delete(key: K): V {\n        this.assertImmutability('delete');\n        for (let i: number = 0; i < this.map.length; i++) {\n            const entry: {key: K, value: V} = this.map[i];\n            if (comparableEquals(entry.key, key)) {\n                const oldValue: V = this.map[i].value;\n                const beforeDeleted: {key: K, value: V}[] = this.map.slice(0, i);\n                const afterDeleted: {key: K, value: V}[] = this.map.slice(i + 1);\n                this.map = beforeDeleted.concat(afterDeleted);\n                return oldValue;\n            }\n        }\n        throw new Error('No value to delete for key \"'+ key.toString() +'\"!');\n    }\n\n    public getCopy(): this {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const newMap: this = new (<any> this.constructor)();\n        for (const key of this.listKeys()) {\n            newMap.set(key, this.get(key).get());\n        }\n        return newMap;\n    }\n\n    public equals(other: MGPMap<K, V>): boolean {\n        const thisKeySet: MGPSet<K> = this.getKeySet();\n        const otherKeySet: MGPSet<K> = other.getKeySet();\n        if (thisKeySet.equals(otherKeySet) === false) {\n            return false;\n        }\n        for (const key of thisKeySet) {\n            const thisValue: V = this.get(key).get();\n            const otherValue: MGPOptional<V> = other.get(key);\n            Utils.assert(otherValue.isPresent(), 'value is absent in a map even though its key is present!');\n            if (comparableEquals(thisValue, otherValue.get()) === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport class ReversibleMap<K extends NonNullable<Comparable>, V extends NonNullable<Comparable>> extends MGPMap<K, V> {\n\n    public reverse(): ReversibleMap<V, MGPSet<K>> {\n        const reversedMap: ReversibleMap<V, MGPSet<K>> = new ReversibleMap<V, MGPSet<K>>();\n        for (const key of this.listKeys()) {\n            const value: V = this.get(key).get();\n            if (reversedMap.containsKey(value)) {\n                reversedMap.get(value).get().add(key);\n            } else {\n                const newSet: MGPSet<K> = new MGPSet<K>();\n                newSet.add(key);\n                reversedMap.set(value, newSet);\n            }\n        }\n        return reversedMap;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2736e4e7c637a9d336732f84e70808432f16cec3","contentHash":"0e7ace4da097bb21100082fe350b1712cd21196ab1b07fe70bc9c64fe318a842"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPSet.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPSet.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":32}},"5":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":29}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":62}},"8":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"9":{"start":{"line":19,"column":12},"end":{"line":19,"column":25}},"10":{"start":{"line":21,"column":8},"end":{"line":25,"column":9}},"11":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"12":{"start":{"line":23,"column":16},"end":{"line":23,"column":29}},"13":{"start":{"line":26,"column":8},"end":{"line":26,"column":20}},"14":{"start":{"line":29,"column":21},"end":{"line":29,"column":23}},"15":{"start":{"line":30,"column":8},"end":{"line":37,"column":9}},"16":{"start":{"line":31,"column":12},"end":{"line":36,"column":13}},"17":{"start":{"line":32,"column":16},"end":{"line":32,"column":35}},"18":{"start":{"line":35,"column":16},"end":{"line":35,"column":52}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":47}},"20":{"start":{"line":41,"column":8},"end":{"line":47,"column":9}},"21":{"start":{"line":42,"column":12},"end":{"line":42,"column":25}},"22":{"start":{"line":45,"column":12},"end":{"line":45,"column":38}},"23":{"start":{"line":46,"column":12},"end":{"line":46,"column":24}},"24":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"25":{"start":{"line":54,"column":21},"end":{"line":54,"column":22}},"26":{"start":{"line":55,"column":12},"end":{"line":58,"column":13}},"27":{"start":{"line":56,"column":16},"end":{"line":56,"column":41}},"28":{"start":{"line":57,"column":16},"end":{"line":57,"column":28}},"29":{"start":{"line":60,"column":8},"end":{"line":60,"column":21}},"30":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"31":{"start":{"line":64,"column":12},"end":{"line":64,"column":30}},"32":{"start":{"line":68,"column":23},"end":{"line":68,"column":48}},"33":{"start":{"line":69,"column":8},"end":{"line":69,"column":32}},"34":{"start":{"line":70,"column":8},"end":{"line":70,"column":22}},"35":{"start":{"line":73,"column":8},"end":{"line":77,"column":9}},"36":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"37":{"start":{"line":75,"column":16},"end":{"line":75,"column":28}},"38":{"start":{"line":78,"column":8},"end":{"line":78,"column":21}},"39":{"start":{"line":81,"column":8},"end":{"line":81,"column":34}},"40":{"start":{"line":84,"column":23},"end":{"line":84,"column":25}},"41":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"42":{"start":{"line":86,"column":12},"end":{"line":86,"column":31}},"43":{"start":{"line":88,"column":8},"end":{"line":88,"column":22}},"44":{"start":{"line":91,"column":8},"end":{"line":96,"column":9}},"45":{"start":{"line":92,"column":12},"end":{"line":92,"column":64}},"46":{"start":{"line":95,"column":12},"end":{"line":95,"column":53}},"47":{"start":{"line":99,"column":8},"end":{"line":99,"column":40}},"48":{"start":{"line":102,"column":8},"end":{"line":102,"column":40}},"49":{"start":{"line":105,"column":23},"end":{"line":105,"column":25}},"50":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"51":{"start":{"line":107,"column":12},"end":{"line":107,"column":41}},"52":{"start":{"line":109,"column":8},"end":{"line":109,"column":34}},"53":{"start":{"line":112,"column":23},"end":{"line":112,"column":35}},"54":{"start":{"line":113,"column":8},"end":{"line":115,"column":9}},"55":{"start":{"line":114,"column":12},"end":{"line":114,"column":38}},"56":{"start":{"line":116,"column":8},"end":{"line":116,"column":22}},"57":{"start":{"line":119,"column":23},"end":{"line":119,"column":35}},"58":{"start":{"line":120,"column":8},"end":{"line":124,"column":9}},"59":{"start":{"line":121,"column":12},"end":{"line":123,"column":13}},"60":{"start":{"line":122,"column":16},"end":{"line":122,"column":36}},"61":{"start":{"line":125,"column":8},"end":{"line":125,"column":22}},"62":{"start":{"line":128,"column":8},"end":{"line":132,"column":9}},"63":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"64":{"start":{"line":130,"column":16},"end":{"line":130,"column":61}},"65":{"start":{"line":133,"column":8},"end":{"line":133,"column":49}},"66":{"start":{"line":136,"column":23},"end":{"line":136,"column":35}},"67":{"start":{"line":137,"column":8},"end":{"line":141,"column":9}},"68":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"69":{"start":{"line":139,"column":16},"end":{"line":139,"column":36}},"70":{"start":{"line":142,"column":8},"end":{"line":142,"column":22}},"71":{"start":{"line":149,"column":8},"end":{"line":153,"column":9}},"72":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"73":{"start":{"line":151,"column":16},"end":{"line":151,"column":61}},"74":{"start":{"line":154,"column":8},"end":{"line":154,"column":49}},"75":{"start":{"line":157,"column":8},"end":{"line":157,"column":36}},"76":{"start":{"line":160,"column":0},"end":{"line":160,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":24},"end":{"line":16,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":27,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":15},"end":{"line":39,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":17},"end":{"line":48,"column":5}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":20},"end":{"line":61,"column":5}},"line":53},"5":{"name":"(anonymous_5)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":21},"end":{"line":66,"column":5}},"line":62},"6":{"name":"(anonymous_6)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":20},"end":{"line":71,"column":5}},"line":67},"7":{"name":"(anonymous_7)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":22},"end":{"line":79,"column":5}},"line":72},"8":{"name":"(anonymous_8)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":11},"end":{"line":82,"column":5}},"line":80},"9":{"name":"(anonymous_9)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":13},"end":{"line":89,"column":5}},"line":83},"10":{"name":"(anonymous_10)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":20},"end":{"line":97,"column":5}},"line":90},"11":{"name":"(anonymous_11)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":14},"end":{"line":100,"column":5}},"line":98},"12":{"name":"(anonymous_12)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":18},"end":{"line":103,"column":5}},"line":101},"13":{"name":"(anonymous_13)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":16},"end":{"line":110,"column":5}},"line":104},"14":{"name":"(anonymous_14)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":15},"end":{"line":117,"column":5}},"line":111},"15":{"name":"(anonymous_15)","decl":{"start":{"line":118,"column":4},"end":{"line":118,"column":5}},"loc":{"start":{"line":118,"column":14},"end":{"line":126,"column":5}},"line":118},"16":{"name":"(anonymous_16)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":32},"end":{"line":134,"column":5}},"line":127},"17":{"name":"(anonymous_17)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":24},"end":{"line":143,"column":5}},"line":135},"18":{"name":"(anonymous_18)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":33},"end":{"line":155,"column":5}},"line":148},"19":{"name":"(anonymous_19)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":24},"end":{"line":158,"column":5}},"line":156}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},{"start":{"line":10,"column":8},"end":{"line":15,"column":9}}],"line":10},"1":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"2":{"loc":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},{"start":{"line":22,"column":12},"end":{"line":24,"column":13}}],"line":22},"3":{"loc":{"start":{"line":31,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":36,"column":13}},{"start":{"line":31,"column":12},"end":{"line":36,"column":13}}],"line":31},"4":{"loc":{"start":{"line":41,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":47,"column":9}},{"start":{"line":41,"column":8},"end":{"line":47,"column":9}}],"line":41},"5":{"loc":{"start":{"line":55,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":58,"column":13}},{"start":{"line":55,"column":12},"end":{"line":58,"column":13}}],"line":55},"6":{"loc":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},{"start":{"line":74,"column":12},"end":{"line":76,"column":13}}],"line":74},"7":{"loc":{"start":{"line":91,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":96,"column":9}},{"start":{"line":91,"column":8},"end":{"line":96,"column":9}}],"line":91},"8":{"loc":{"start":{"line":121,"column":12},"end":{"line":123,"column":13}},"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":123,"column":13}},{"start":{"line":121,"column":12},"end":{"line":123,"column":13}}],"line":121},"9":{"loc":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},{"start":{"line":129,"column":12},"end":{"line":131,"column":13}}],"line":129},"10":{"loc":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},{"start":{"line":138,"column":12},"end":{"line":140,"column":13}}],"line":138},"11":{"loc":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},{"start":{"line":150,"column":12},"end":{"line":152,"column":13}}],"line":150}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":78,"6":9,"7":69,"8":11,"9":1,"10":10,"11":17,"12":2,"13":8,"14":2,"15":2,"16":3,"17":1,"18":2,"19":2,"20":14,"21":3,"22":11,"23":11,"24":2,"25":2,"26":4,"27":1,"28":1,"29":1,"30":3,"31":6,"32":1,"33":1,"34":1,"35":42,"36":60,"37":23,"38":19,"39":40,"40":2,"41":2,"42":4,"43":2,"44":2,"45":1,"46":1,"47":4,"48":2,"49":1,"50":1,"51":2,"52":1,"53":1,"54":1,"55":2,"56":1,"57":1,"58":1,"59":2,"60":1,"61":1,"62":2,"63":3,"64":1,"65":1,"66":1,"67":1,"68":2,"69":1,"70":1,"71":3,"72":4,"73":2,"74":1,"75":28,"76":1},"f":{"0":78,"1":11,"2":2,"3":14,"4":2,"5":3,"6":1,"7":42,"8":40,"9":2,"10":2,"11":4,"12":2,"13":1,"14":1,"15":1,"16":2,"17":1,"18":3,"19":28},"b":{"0":[9,69],"1":[1,10],"2":[2,15],"3":[1,2],"4":[3,11],"5":[1,3],"6":[23,37],"7":[1,1],"8":[1,1],"9":[1,2],"10":[1,1],"11":[2,2]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/MGPSet.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/MGPSet.ts"],"names":[],"mappings":"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","sourcesContent":["import { Comparable, comparableEquals, ComparableObject } from './Comparable';\nimport { MGPOptional } from './MGPOptional';\nimport { Sets } from './Sets';\n\nexport class MGPSet<T extends Comparable> implements ComparableObject {\n\n    protected values: T[];\n\n    public constructor(values?: readonly T[]) {\n        if (values === undefined) {\n            this.values = [];\n        } else {\n            this.values = Sets.toComparableSet(values);\n        }\n    }\n\n    public equals(other: MGPSet<T>): boolean {\n        if (other.size() !== this.size()) {\n            return false;\n        }\n        for (const coord of this) {\n            if (other.contains(coord) === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public toString(): string {\n        let result: string = '';\n        for (const element of this) {\n            if (element == null) {\n                result += 'null, ';\n            } else {\n                result += element.toString() + ', ';\n            }\n        }\n        return '[' + result.slice(0, -2) + ']';\n    }\n\n    public add(element: T): boolean {\n        if (this.contains(element)) {\n            return false;\n        } else {\n            this.values.push(element);\n            return true;\n        }\n    }\n\n    /**\n     * Remove an element from the set.\n     * Returns true if something was actually removed, false otherwise.\n     */\n    public remove(element: T): boolean {\n        for (let i: number = 0; i < this.values.length; i++) {\n            if (comparableEquals(this.values[i], element)) {\n                this.values.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public addAll(otherSet: MGPSet<T>): void {\n        for (const element of otherSet) {\n            this.add(element);\n        }\n    }\n\n    public union(otherSet: MGPSet<T>): MGPSet<T> {\n        const result: MGPSet<T> = new MGPSet(this.toList());\n        result.addAll(otherSet);\n        return result;\n    }\n\n    public contains(element: T): boolean {\n        for (const value of this.values) {\n            if (comparableEquals(value, element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public size(): number {\n        return this.values.length;\n    }\n\n    public toList(): T[] {\n        const result: T[] = [];\n        for (const value of this) {\n            result.push(value);\n        }\n        return result;\n    }\n\n    public getAnyElement(): MGPOptional<T> {\n        if (this.size() > 0) {\n            return MGPOptional.of(this.values[0]);\n        } else {\n            return MGPOptional.empty();\n        }\n    }\n\n    public isEmpty(): boolean {\n        return this.values.length === 0;\n    }\n\n    public hasElements(): boolean {\n        return this.isEmpty() === false;\n    }\n\n    public map<V extends Comparable>(mapper: (element: T) => V): MGPSet<V> {\n        const result: V[] = [];\n        for (const element of this.values) {\n            result.push(mapper(element));\n        }\n        return new MGPSet(result);\n    }\n\n    public flatMap<U extends Comparable>(f: (element: T) => MGPSet<U>): MGPSet<U> {\n        const result: MGPSet<U> = new MGPSet();\n        for (const element of this) {\n            result.addAll(f(element));\n        }\n        return result;\n    }\n\n    public filter(f: (element: T) => boolean): MGPSet<T> {\n        const result: MGPSet<T> = new MGPSet();\n        for (const element of this) {\n            if (f(element)) {\n                result.add(element);\n            }\n        }\n        return result;\n    }\n\n    public findAnyCommonElement(other: MGPSet<T>): MGPOptional<T> {\n        for (const element of other) {\n            if (this.contains(element)) {\n                return MGPOptional.of(element);\n            }\n        }\n        return MGPOptional.empty();\n    }\n\n    public intersection(other: MGPSet<T>): MGPSet<T> {\n        const result: MGPSet<T> = new MGPSet();\n        for (const element of other) {\n            if (this.contains(element)) {\n                result.add(element);\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @param other the \"reference\" set\n     * @returns an empty optional is nothing miss in this set; the first element missing as an optional if there is one\n     */\n    public getMissingElementFrom(other: MGPSet<T>): MGPOptional<T> {\n        for (const element of other) {\n            if (this.contains(element) === false) {\n                return MGPOptional.of(element);\n            }\n        }\n        return MGPOptional.empty();\n    }\n\n    [Symbol.iterator](): IterableIterator<T> {\n        return this.values.values();\n    }\n\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a3ddfc6430360aa16787d1694440d82d8bb52602","contentHash":"a586a74d67b1f3529b76a4e35e14e4bef82eacf265faa0d62dc2ddb1f9ca6501"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Sets.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\Sets.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":7,"column":23},"end":{"line":7,"column":25}},"4":{"start":{"line":8,"column":8},"end":{"line":12,"column":11}},"5":{"start":{"line":9,"column":12},"end":{"line":11,"column":13}},"6":{"start":{"line":9,"column":36},"end":{"line":9,"column":52}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":35}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":22}},"9":{"start":{"line":16,"column":23},"end":{"line":16,"column":25}},"10":{"start":{"line":17,"column":8},"end":{"line":21,"column":11}},"11":{"start":{"line":18,"column":12},"end":{"line":20,"column":13}},"12":{"start":{"line":18,"column":36},"end":{"line":18,"column":81}},"13":{"start":{"line":19,"column":16},"end":{"line":19,"column":35}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":22}},"15":{"start":{"line":25,"column":0},"end":{"line":25,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":39},"end":{"line":14,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":21},"end":{"line":8,"column":22}},"loc":{"start":{"line":8,"column":32},"end":{"line":12,"column":9}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":28},"end":{"line":9,"column":29}},"loc":{"start":{"line":9,"column":36},"end":{"line":9,"column":52}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":33},"end":{"line":23,"column":5}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":21},"end":{"line":17,"column":22}},"loc":{"start":{"line":17,"column":32},"end":{"line":21,"column":9}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":28},"end":{"line":18,"column":29}},"loc":{"start":{"line":18,"column":36},"end":{"line":18,"column":81}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":12},"end":{"line":11,"column":13}},"type":"if","locations":[{"start":{"line":9,"column":12},"end":{"line":11,"column":13}},{"start":{"line":9,"column":12},"end":{"line":11,"column":13}}],"line":9},"1":{"loc":{"start":{"line":18,"column":12},"end":{"line":20,"column":13}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":20,"column":13}},{"start":{"line":18,"column":12},"end":{"line":20,"column":13}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":2,"7":2,"8":1,"9":70,"10":70,"11":126,"12":62,"13":125,"14":70,"15":1},"f":{"0":1,"1":3,"2":2,"3":70,"4":126,"5":62},"b":{"0":[2,1],"1":[125,1]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/Sets.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/Sets.ts"],"names":[],"mappings":";;;AAAA,6CAA8E;AAE9E,MAAa,IAAI;IAEN,MAAM,CAAC,qBAAqB,CAA6B,IAAkB;QAC9E,MAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,CAAC,KAAQ,EAAE,EAAE;YACtB,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAK,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;gBACrD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IACM,MAAM,CAAC,eAAe,CAAuB,IAAkB;QAClE,MAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,CAAC,KAAQ,EAAE,EAAE;YACtB,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAK,EAAE,EAAE,CAAC,IAAA,6BAAgB,EAAC,EAAE,EAAE,KAAK,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;gBAChE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AApBD,oBAoBC","sourcesContent":["import { Comparable, comparableEquals, ComparableObject } from './Comparable';\n\nexport class Sets {\n\n    public static toComparableObjectSet<T extends ComparableObject>(list: readonly T[]): T[] {\n        const result: T[] = [];\n        list.forEach((other: T) => {\n            if (result.some((el: T) => el.equals(other)) === false) {\n                result.push(other);\n            }\n        });\n        return result;\n    }\n    public static toComparableSet<T extends Comparable>(list: readonly T[]): T[] {\n        const result: T[] = [];\n        list.forEach((other: T) => {\n            if (result.some((el: T) => comparableEquals(el, other)) === false) {\n                result.push(other);\n            }\n        });\n        return result;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e6447e5c4ef0a5caefbb7cf829ae150e1e0e6d52","contentHash":"11d2b0c24bc703bd1f87c4f6785cb56c9c403160f90758f85b3d603d9fde5ade"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPUniqueList.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MGPUniqueList.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":34}},"5":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"6":{"start":{"line":14,"column":12},"end":{"line":14,"column":25}},"7":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"8":{"start":{"line":16,"column":21},"end":{"line":16,"column":22}},"9":{"start":{"line":17,"column":31},"end":{"line":17,"column":43}},"10":{"start":{"line":18,"column":30},"end":{"line":18,"column":41}},"11":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"12":{"start":{"line":20,"column":16},"end":{"line":20,"column":29}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":105}},"15":{"start":{"line":27,"column":8},"end":{"line":27,"column":34}},"16":{"start":{"line":34,"column":8},"end":{"line":34,"column":116}},"17":{"start":{"line":35,"column":26},"end":{"line":35,"column":48}},"18":{"start":{"line":36,"column":8},"end":{"line":36,"column":43}},"19":{"start":{"line":39,"column":0},"end":{"line":39,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":24,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":15},"end":{"line":28,"column":5}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":22},"end":{"line":37,"column":5}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13},"1":{"loc":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},{"start":{"line":19,"column":12},"end":{"line":21,"column":13}}],"line":19}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":1,"7":3,"8":3,"9":4,"10":4,"11":4,"12":2,"13":1,"14":13,"15":12,"16":3,"17":2,"18":2,"19":1},"f":{"0":4,"1":13,"2":3},"b":{"0":[1,3],"1":[2,2]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/MGPUniqueList.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/MGPUniqueList.ts"],"names":[],"mappings":";;;AAAA,6CAA4D;AAC5D,qCAAkC;AAClC,mCAAgC;AAEhC;;;GAGG;AACH,MAAa,aAAoC,SAAQ,eAAS;IAE9C,MAAM,CAAC,KAAuB;QAC1C,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;YAC/B,OAAO,KAAK,CAAC;QACjB,CAAC;QACD,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAG,EAAE,CAAC;YAC5C,MAAM,UAAU,GAAM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,SAAS,GAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,IAAA,6BAAgB,EAAC,UAAU,EAAE,SAAS,CAAC,KAAK,KAAK,EAAE,CAAC;gBACpD,OAAO,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,GAAG,CAAC,KAAa;QACpB,aAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,sCAAsC,GAAG,KAAK,CAAC,CAAC;QACzF,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED;;;QAGI;IACG,UAAU,CAAC,KAAa;QAC3B,aAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,iDAAiD,GAAG,KAAK,CAAC,CAAC;QACpG,MAAM,SAAS,GAAW,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;IACvC,CAAC;CACJ;AA9BD,sCA8BC","sourcesContent":["import { Comparable, comparableEquals } from './Comparable';\nimport { MGPSet } from './MGPSet';\nimport { Utils } from './Utils';\n\n/**\n * This is a list that contains each element only once.\n * It is an ordered set.\n */\nexport class MGPUniqueList<T extends Comparable> extends MGPSet<T> {\n\n    public override equals(other: MGPUniqueList<T>): boolean {\n        if (other.size() !== this.size()) {\n            return false;\n        }\n        for (let i: number = 0; i < this.size(); i ++) {\n            const otherValue: T = other.get(i);\n            const thisValue: T = this.get(i);\n            if (comparableEquals(otherValue, thisValue) === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public get(index: number): T {\n        Utils.assert(index < this.values.length, 'MGPUniqueList: index out of bounds: ' + index);\n        return this.values[index];\n    }\n\n    /**\n      * Get element starting to count from the end (0 for the last)\n      * @param index the index of the element to fetch, starting from the end (0 as last)\n      */\n    public getFromEnd(index: number): T {\n        Utils.assert(index < this.values.length, 'MGPUniqueList: index (from end) out of bounds: ' + index);\n        const lastIndex: number = this.values.length - 1;\n        return this.get(lastIndex - index);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"63581e845a941a3314094e36832bceaa1b576d32","contentHash":"9587cbd35f2ef7cad901a4f6b29b857071bffa4d78285d7e0d69fd0dcc9782f1"},"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MathUtils.ts":{"path":"C:\\martinr\\multi-game-project\\EveryBoard\\lib\\src\\MathUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"3":{"start":{"line":11,"column":12},"end":{"line":11,"column":31}},"4":{"start":{"line":14,"column":12},"end":{"line":14,"column":43}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":21},"end":{"line":16,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},{"start":{"line":10,"column":8},"end":{"line":15,"column":9}}],"line":10}},"s":{"0":1,"1":1,"2":17,"3":6,"4":11,"5":1},"f":{"0":17},"b":{"0":[6,11]},"inputSourceMap":{"version":3,"file":"C:/martinr/multi-game-project/EveryBoard/lib/src/MathUtils.ts","sources":["C:/martinr/multi-game-project/EveryBoard/lib/src/MathUtils.ts"],"names":[],"mappings":";;;AAAA,MAAa,SAAS;IAClB;;;OAGG;IACI,MAAM,CAAC,GAAG,CAAC,CAAS,EAAE,CAAS;QAClC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YACV,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC;aAAM,CAAC;YACJ,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;CAEJ;AAbD,8BAaC","sourcesContent":["export class MathUtils {\n    /**\n     * Returns the greatest common divisor between two numbers a and b.\n     * Uses the euclidean algorithm. Negative inputs are supported.\n     */\n    public static gcd(a: number, b: number): number {\n        if (b === 0) {\n            return Math.abs(a);\n        } else {\n            return MathUtils.gcd(b, a % b);\n        }\n    }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"646b1bdf7c39e203f99330ffee0ca0dbb57b1e04","contentHash":"9b9031f3d65609eab2c5cdac388a4590b9780503319589b71f49fbe5e19f6889"}}